{
  "articles": [
    {
      "path": "age-breakdowns.html",
      "title": "Age cohort calculations",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\nData source\nThese charts are drawn using data published by the Official Statistics Portal (OSP) on their COVID-19 open data site, along with the annual population counts for Lithuanian municipalities, also published by the OSP.\nThe R markdown source is available as a github repo.\n\nShow code\nage_bands_municipalities <- tibble(lt_aggregate) %>%\n#  select(-object_id) %>%\n  mutate(date = as_date(date)) %>%\n  group_by(municipality_name, date, age_gr) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE))) %>%\n  ungroup()\n\nage_bands <- age_bands_municipalities %>%\n  group_by(date, age_gr) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE)))\n\nnatl_age_data <-  lt_age_sex_data %>%\n  filter( location == \"Total\" ) %>%\n  select(-location) %>%\n  pivot_longer(\n    cols = !\"total\",\n    values_to = \"count\",\n    names_to = \"age_range\") %>%\n  mutate_if(is.character, str_remove_all, pattern = \"\\\\d+[^\\\\d]\") %>%\n  mutate(age_range = as.numeric(age_range)) %>%\n  mutate(age_range = replace_na(age_range, 85)) %>%\n  mutate(cohort = cut(age_range,\n                      c(0, 9, 19, 29, 39, 49, 59, 69, 79, 89 ),\n                      c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80+\"),\n                      include.lowest = TRUE)) %>%\n  select(-age_range,-total) %>%\n  group_by(cohort) %>%\n  summarise(count = sum(count))\n\nlt_age_data <- lt_age_sex_data %>%\n  filter(grepl(\"mun.$\", location)) %>%\n  pivot_longer(\n    cols = !c(\"location\",\"total\"),\n    values_to = \"count\",\n    names_to = \"age range\") %>%\n  mutate_if(is.character, str_replace_all, pattern = \" mun.\", replacement = \"\")\nage_band_factors <- age_bands %>%\n  mutate(cohort = case_when(\n    age_gr == \"80-89\" ~ \"80+\",\n    age_gr == \"90-99\" ~ \"80+\",\n    age_gr == \"Centenarianai\" ~ \"80+\",\n    age_gr == \"Nenustatyta\" ~ NA_character_,\n    TRUE ~ age_gr\n  )) %>%\n  filter(!is.na(cohort)) %>%\n  select(-age_gr) %>%\n  group_by(date, cohort) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE))) %>%\n  ungroup()\n\nper_capita_rates <- left_join(age_band_factors, natl_age_data, by = c(\"cohort\")) %>%\n  mutate(population = count,\n         cases_per_100k = new_cases / count * 100000,\n         deaths_all_per_mill = deaths_all / count * 1000000) %>%\n  select(-count)\n\n\n\n\nShow code\ncolourCount = length(unique(age_bands$age_gr))\ngetPalette = colorRampPalette(brewer.pal(8, \"Set2\"))\n\nage_bands %>%\n  group_by(age_gr) %>%\n  mutate(cases_7d = zoo::rollmean(new_cases,k=7, fill=NA) ) %>%\n  ungroup() %>%\n  filter(date > ymd(\"2021-08-01\")) %>%\n  ggplot(aes(x = date, y=cases_7d, fill=age_gr)) +\n  theme_minimal() +\n  #geom_col(width=1, position = position_stack(reverse = TRUE)) +\n  geom_area() +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_fill_viridis_d(\n    name = \"Age cohort\",\n    #option = \"inferno\",\n    breaks = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\",\n               \"70-79\", \"80-89\", \"90-99\", \"Centenarianai\",  \"Nenustatyta\"),\n    labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\",\n               \"70-79\", \"80-89\", \"90-99\", \"100+\",  \"Unknown\"),\n    direction = 1\n  ) +\n  scale_y_continuous(sec.axis = dup_axis()) +\n  labs(title=\"Lithuania - COVID-19 cases by age group\",\n       subtitle=\"7 day rolling average\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=caption_text) +\n  scale_x_date()\n\n\n\n\nThese charts are inspired by the narrow age cohort graph given by the OSP on their pandemic illustrations page:\nFigure from https://osp.stat.gov.ltBecause the age cohorts given in the two sources used do not align, when calculating COVID rates relative to age cohorts, a smaller number of larger cohorts is used. It is also possible to extend the graph further back into 2021.\n\nShow code\npc_rate_14d <- \n  per_capita_rates %>%\n  group_by(cohort) %>%\n  mutate(pc_cases_14d = zoo::rollsum(cases_per_100k,k=14, fill=NA, align=\"right\") ) %>%\n  ungroup() %>%\n  filter(date >= ymd(\"2021-09-01\"))\n\nntl_rate_14d <- per_capita_rates %>%\n  group_by(date) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE))) %>%\n  mutate(cases_per_100k = new_cases / population * 100000,\n         deaths_all_per_mill = deaths_all / population * 1000000) %>%\n  mutate(pc_cases_14d = zoo::rollsum(cases_per_100k,k=14, fill=NA, align=\"right\") ) %>%\n  filter(date >= ymd(\"2021-09-01\"))\npc_rate_14d %>%\n  ggplot(aes(x = date, y=pc_cases_14d, colour=cohort)) +\n  theme_minimal() +\n  theme( legend.position = \"none\") +\n  geom_line(size=1) +\n  geom_line(data = ntl_rate_14d, aes(x=date, y=pc_cases_14d),\n            linetype = 2, colour=\"black\") +\n  geom_text_repel(aes(x=date,y=pc_cases_14d,label=cohort,colour=cohort),\n                  nudge_x=10,\n                  direction=\"y\",hjust=\"left\",\n                  data=tail(pc_rate_14d, 9)) +\n  geom_text_repel(aes(x=date,y=pc_cases_14d,label=\"National\"),\n                  colour=\"black\",\n                  nudge_y=1000,\n                  hjust=\"right\",\n                  data=ntl_rate_14d %>% filter(date == \"2022-01-01\")) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Age cohort\") +\n  scale_y_continuous() +\n  labs(title=\"Lithuania - COVID-19 cases by age group\",\n       subtitle=\"14 day cumulative per 100,000\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=caption_text) +\n  scale_x_date(expand = expansion(add=c(0,25)))\n\n\n\n\n\nShow code\npc_rate_7d <- per_capita_rates %>%\n  group_by(cohort) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(cases_per_100k,k=7, fill=NA, align=\"right\") ) %>%\n  ungroup() %>%\n  filter(date >= ymd(\"2021-09-01\"))\n\nntl_rate_7d <- per_capita_rates %>%\n  group_by(date) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE))) %>%\n  mutate(cases_per_100k = new_cases / population * 100000,\n         deaths_all_per_mill = deaths_all / population * 1000000) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(cases_per_100k,k=7, fill=NA, align=\"right\") ) %>%\n    filter(date >= ymd(\"2021-09-01\"))\npc_rate_7d %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=cohort)) +\n  theme_minimal() +\n  theme( legend.position = \"none\") +\n  geom_line(size=1) +\n  geom_line(data = ntl_rate_7d, aes(x=date, y=pc_cases_7d_mean),\n            linetype = 2,\n            colour=\"black\") +\n  geom_text_repel(aes(x=date,y=pc_cases_7d_mean,label=cohort,colour=cohort),\n                  nudge_x=20,\n                  direction=\"y\",hjust=\"left\",\n                  data=tail(pc_rate_7d, 9)) +\n  geom_text_repel(aes(x=date,y=pc_cases_7d_mean,label=\"National\"),\n                  colour=\"black\",\n                  nudge_y=60,\n                  hjust=\"left\",\n                  data=ntl_rate_7d %>% filter(date == \"2021-11-15\")) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Age cohort\") +\n  scale_y_continuous() +\n  labs(title=\"Lithuania - COVID-19 cases by age group\",\n       subtitle=\"7 day rolling average per 100,000\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=caption_text) +\n  scale_x_date(expand = expansion(add=c(0,15)))\n\n\n\n\n\nShow code\nper_capita_rates %>%\n  group_by(cohort) %>%\n  mutate(pc_deaths_7d_mean = zoo::rollmean(deaths_all_per_mill,k=7, fill=0, align=\"right\") ) %>%\n  ungroup() %>%\n  filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_deaths_7d_mean, colour=cohort)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Age cohort\", option = \"inferno\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 deaths by age group\",\n       subtitle=\"7 day average per million\",\n       y=\"Deaths\",\n       x=\"Date\",\n       caption=caption_text) +\n  scale_x_date()\n\n\n\n\n\n\n\n",
      "last_modified": "2022-05-10T10:41:19+00:00"
    },
    {
      "path": "breakthrough-calculations.html",
      "title": "Vaccination status and incidence, vaccine effectiveness ",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nData source\nComparing vaccine effectiveness to vaccine ageCalculations for vaccine effectiveness after a single dose\n\nComparison with vaccine-specific UK resultsLithuanian data and approximations\nComparison with UK data\nComments on the comparison\n\nCalculations excluding under-20s\nDataset description (English translation)\nDataset description (Lithuanian original)\n\nLithuania’s Official Statistics Portal (OSP) issues a lot of data which indicates transitions (“events”) for individuals on each day, aggregated by municipality (Lithuania has 60), gender and age cohort. I aggregate these figures further to generate national data to look at how COVID-19 is now affecting vaccinated and unvaccinated individuals.\nAll this comes with the caveats that I am working from OSP data but these are my calculations and there may be errors. I am not an epidemiologist. Straightforward presentation of case numbers have not seen much adjustment.\nFurther calculations (towards estimated vaccine effectiveness) may have error, including in calculations of the unvaccinated population, which influences the estimate of the proportional incidence in the unvaccinated population and thus the relative incidence in vaccinated populations.\nDelta has been the dominant strain of SARS-CoV2 in Lithuania since July 2021 and so some of the inflection at that point may be better attributed to the shift of the prevalent strain rather than the base aging of the vaccinations.\nData source\nThese charts are drawn using data published by the Official Statistics Portal (OSP) on their COVID-19 open data site, along with the annual population counts for Lithuanian municipalities, also published by the OSP.\n\nShow code\nlibrary(vroom)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(ggplot2)\nlibrary(spatstat)\nlibrary(zoo)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(ggrepel)\n\n# Set-up output ----\n\nknitr::opts_chunk$set(\n  echo = FALSE,\n  message = FALSE,\n  warning = FALSE\n)\n\ntheme_set(\n  theme_minimal() +\n    theme(legend.position = \"bottom\")\n  )\n\n# set random seed \n# this is so that re-running the graph generation on a regular basis (as we do) without\n# changing the data (which we do, since the data is now fixed) doesn't generate changed\n# graphs (due to the jitter used)\nset.seed(6381045)\n\n# dataset source: ----\n\n# https://open-data-ls-osp-sdg.hub.arcgis.com/datasets/1fd352a1c4534afe8ff87c564c0724c0_0/about\n\n# dataset description: ----\n\n# Download functions ----\ndownload_restful <- function (api_call = \"\",\n                              data_filter = function(x) { return(x) }) {\n  if(str_length(api_call) == 0) {\n    message(\"Empty api_call\")\n    return(NULL)\n  }\n  get_data <- GET(api_call)\n\n  get_content <- content(get_data, \"text\")\n\n  get_json <- fromJSON(get_content, flatten = TRUE)\n\n  get_df <- as.data.frame(get_json$features)\n\n  result_offset <- dim(get_df)\n  result_offset <- result_offset[1]\n\n  get_df <- data_filter(get_df)\n\n  page <- 1\n  done_download <- FALSE\n  supp_data <- get_data\n\n  rm(\"get_data\", \"get_content\", \"get_json\")\n\n  while (!done_download && supp_data$status_code == 200) {\n    offset <- result_offset * page\n    page <- page + 1\n    supp_api_call <-\n      paste(api_call, \"&resultOffset=\", sprintf(\"%d\", offset), sep = \"\")\n    supp_data <- GET(supp_api_call)\n    message( \".\", appendLF = FALSE)\n\n    supp_content <- content(supp_data, \"text\")\n    supp_json <- fromJSON(supp_content, flatten = TRUE)\n    supp_df <- as.data.frame(supp_json$features) %>%\n      data_filter()\n    row_count <- dim(supp_json$features)\n    row_count <- row_count[1]\n\n    if (!hasName(supp_json, \"exceededTransferLimit\")) {\n      message(\n        \"\\nDownload complete\"\n      )\n      done_download <- TRUE\n    }\n    if (supp_data$status_code == 200) {\n      get_df <- rbind(get_df, supp_df)\n    } else {\n      message(\"\\nDownload finished with unexpected status code\",\n              supp_data$status_code\n      )\n      break\n    }\n  }\n  return(get_df)\n}\n\n#' Download Excel Documents\n#' Taken from covidregionaldata library\n#'\n#' @param url Character string containing the full URL to the Excel document.\n#' @param archive Character string naming the file name to assign in the\n#' temporary directory.\n#' @param transpose Logical, should the read in data be transposed\n#' @param ... Additional parameters to pass to `read_excel()`.\n#' @inheritParams message_verbose\n#' @importFrom readxl read_excel\n#' @return A `data.frame`.\ndownload_excel <- function(url, archive, verbose = FALSE,\n                           transpose = TRUE, ...) {\n  # download\n  archive <- file.path(tempdir(), archive)\n  download.file(\n    url = url,\n    destfile = archive,\n    mode = \"wb\", quiet = !(verbose)\n  )\n  # read in\n  dt <- suppressMessages(\n    read_excel(archive, ...)\n  )\n\n  if (transpose) {\n    dt <- t(dt)\n  }\n  dt <- as.data.frame(dt)\n  return(dt)\n}\n\n# Download the data ----\n\nif (params$download_data) {\n  lt_vacc_eff_data <- download_restful(\n    api_call = \"https://services3.arcgis.com/MF53hRPmwfLccHCj/arcgis/rest/services/COVID_u%C5%BEsikr%C4%97timai_tarp_vakcinuot%C5%B3_ir_nevakcinuot%C5%B3/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\" # nolint\n  ) %>%\n    rename_with(~ gsub(\"attributes.\",\"\", .x)) %>%\n    mutate(date = as_date(as_datetime(date / 1000)))\n\n\n  # Download the at risk data table for the beginning of 2021\n  #\n  # https://ls-osp-sdg.maps.arcgis.com/sharing/rest/content/items/12822ba507864e119d713d14c1971e78/data\n\n  initial_state <- download_excel(\n    \"https://ls-osp-sdg.maps.arcgis.com/sharing/rest/content/items/12822ba507864e119d713d14c1971e78/data\",\n    sheet = \"initial_states_20210101\",\n    archive = \"initial_states\",\n    transpose = FALSE)\n  save(lt_vacc_eff_data, initial_state,\n       file = \"input_data_ongoing.Rds\")\n} else {\n  load(\"input_data_ongoing.Rds\")\n}\n\n# Data manipulation ----\n\nlt_natl_ve_data <- tibble(lt_vacc_eff_data) %>%\n  left_join(initial_state, by=c(\"municipality\",\"sex\",\"age_gr\")) %>%\n  #select(-object_id) %>%\n  group_by(date, sex, age_gr) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE)), r0_init = sum(at_risk)) %>%\n  ungroup()\n\nlt_natl_ve_data_adults <- tibble(lt_vacc_eff_data) %>%\n  left_join(initial_state, by=c(\"municipality\",\"sex\",\"age_gr\")) %>%\n  #select(-object_id) %>%\n  filter(age_gr != \"0-19\") %>%\n  group_by(date, sex, age_gr) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE)), r0_init = sum(at_risk)) %>%\n  ungroup()\n\nr0_init_cohorts <- tibble(initial_state) %>%\n  group_by(sex, age_gr) %>%\n  summarise(r0 = sum(at_risk))\n\nr0_init <- sum(initial_state$at_risk)\nr0_init_adults <- sum(initial_state %>%\n                          filter(age_gr != \"0-19\") %>%\n                        pull(at_risk))\n\ncalculate_ve <-\n  function(.data) {\n    #browser()\n    if (dplyr::is_grouped_df(.data)) {\n      return(dplyr::do(.data, calculate_ve(.)))\n    }\n    #message(str(.data))\n  # calculate populations in each category\n  mutate(.data, \n    censored = r0c0+r0c1+r1c1+r1c2+r2c2+r2c3+r3c3, # per day\n    infected = r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3, # per day\n    r_pop_r0 = r0_init - cumsum(r0r1+r0c0+r0c1+r0i0+r0i1),\n    r_pop_r1 = cumsum(r0r1-r1r2-r1i1-r1c1-r1i2-r1c2),\n    r_pop_r2 = cumsum(r1r2-r2r3-r2i2-r2c2-r2i3-r2c3),\n    r_pop_r3 = cumsum(r2r3-r3c3-r3i3),\n) %>%\n  # fractions of each population infected\n  mutate(\n    i_frac_r0 = (r0i0+r0i1) / r_pop_r0,\n    i_frac_r1 = (r1i1+r1i2) / r_pop_r1,\n    i_frac_r2 = if_else(r_pop_r2 >0, (r2i2+r2i3) / r_pop_r2, NA_real_),\n    i_frac_r3 = if_else(r_pop_r3 >0,(r3i3) / r_pop_r3, NA_real_)\n  ) %>%\n  mutate(\n    ve_vs_r0_r1 =  (i_frac_r0 - i_frac_r1)/i_frac_r0,\n    ve_vs_r0_r2 = (i_frac_r0 - i_frac_r2)/i_frac_r0,\n    ve_vs_r0_r3 = if_else(r_pop_r3 != 0,(i_frac_r0 - i_frac_r3)/i_frac_r0, NA_real_)\n  )\n}\n\ninf_comp_wide <- calculate_ve(\n  lt_natl_ve_data %>%\n    #filter(date < \"2021-01-15\") %>%\n    group_by(date) %>%\n    summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE)), r0_init=sum(r0_init)) %>%\n    mutate(partially = (r1i1+r1i2) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n           fully = (r2i2+r2i3+r3i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3)) %>%\n    ungroup() )\n  \ninf_comp_cohort_wide <- calculate_ve(\n  lt_natl_ve_data %>%\n    mutate(month = month(date)) %>%\n    group_by(month, age_gr, sex) %>%\n        summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE)), r0_init=sum(r0_init)) %>%\n    mutate(partially = (r1i1+r1i2) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n           fully = (r2i2+r2i3+r3i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3)) %>%\n    ungroup()\n)\n\n# inf_comp_cohort_wide %>%\n#   filter(month>=3) %>%\n#   ggplot(aes(x=month, y=ve_vs_r0_r2, colour=age_gr, shape=sex)) + \n#   geom_jitter() +\n#   geom_line() +\n#   scale_y_continuous(limits=c(0,1), labels = scales::percent)\n# \n# inf_comp_cohort_wide %>% ggplot(aes(x=month, y=ve_vs_r0_r2, colour=sex)) + geom_jitter() + facet_grid(rows=vars(age_gr))\n\ninfection_comparisons_wide <- lt_natl_ve_data %>% #filter(date < \"2021-01-15\") %>%\n  group_by(date) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE)), r0_init=sum(r0_init)) %>%\n  mutate(partially = (r1i1+r1i2) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n         fully = (r2i2+r2i3+r3i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3)) %>%\n  ungroup() %>%\n  # calculate populations in each category\n  mutate(\n    censored = r0c0+r0c1+r1c1+r1c2+r2c2+r2c3+r3c3, # per day\n    infected = r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3, # per day\n    #r_pop = r0_init - cumsum(censored + infected),\n    r_pop_r0 = r0_init - cumsum(r0r1+r0c0+r0c1+r0i0+r0i1),\n    r_pop_r1 = cumsum(r0r1-r1r2-r1i1-r1c1-r1i2-r1c2),\n    r_pop_r2 = cumsum(r1r2-r2r3-r2i2-r2c2-r2i3-r2c3),\n    r_pop_r3 = cumsum(r2r3-r3c3-r3i3)) %>%\n  # fractions of each population infected\n  mutate(\n    i_frac_r0 = (r0i0+r0i1) / r_pop_r0,\n    i_frac_r1 = (r1i1+r1i2) / r_pop_r1,\n    i_frac_r2 = if_else(r_pop_r2 >0, (r2i2+r2i3) / r_pop_r2, NA_real_),\n    i_frac_r3 = if_else(r_pop_r3 >0,(r3i3) / r_pop_r3, NA_real_)\n  ) %>%\n  mutate(\n    ve_vs_r0_r1 =  (i_frac_r0 - i_frac_r1)/i_frac_r0,\n    ve_vs_r0_r2 = (i_frac_r0 - i_frac_r2)/i_frac_r0,\n    ve_vs_r0_r3 = if_else(r_pop_r3 != 0,(i_frac_r0 - i_frac_r3)/i_frac_r0, NA_real_)\n  )\n\ninfection_comparisons_wide_adults <- lt_natl_ve_data_adults %>%\n  group_by(date) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE))) %>%\n  mutate(partially = (r1i1+r1i2) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n         fully = (r2i2+r2i3+r3i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3)) %>%\n  ungroup() %>%\n  # calculate populations in each category\n  mutate(\n    censored = r0c0+r0c1+r1c1+r1c2+r2c2+r2c3+r3c3, # per day\n    infected = r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3, # per day\n    #r_pop = r0_init_adults - cumsum(r0r1+r0c0+r0c1+r0i0+r0i1),\n    r_pop_r0 = r0_init_adults - cumsum(r0r1+r0c0+r0c1+r0i0+r0i1),\n    r_pop_r1 = cumsum(r0r1-r1r2-r1i1-r1c1-r1i2-r1c2),\n    r_pop_r2 = cumsum(r1r2-r2r3-r2i2-r2c2-r2i3-r2c3),\n    r_pop_r3 = cumsum(r2r3-r3c3-r3i3)) %>%\n  # fractions of each population infected\n  mutate(\n    i_frac_r0 = (r0i0+r0i1) / r_pop_r0,\n    i_frac_r1 = (r1i1+r1i2) / r_pop_r1,\n    i_frac_r2 = (r2i2+r2i3) / r_pop_r2,\n    i_frac_r3 = (r3i3) / r_pop_r3\n  ) %>%\n  mutate(\n    ve_vs_r0_r1 =  (i_frac_r0 - i_frac_r1)/i_frac_r0,\n    ve_vs_r0_r2 = (i_frac_r0 - i_frac_r2)/i_frac_r0,\n    ve_vs_r0_r3 = if_else(r_pop_r3 != 0,(i_frac_r0 - i_frac_r3)/i_frac_r0, NA_real_)\n  )\n\n# Calculate median vaccination dates ----\n\nmedian_date <- function(data, cols=c(date=\"date\", sums=\"sums\")) {\n  sorted_data <- data %>% select(cols) %>%\n    arrange(cols[\"date\"])\n  medians <- rep_len(NA_Date_, length(data[[cols[\"date\"]]]))\n  last_median_idx <- 1\n  for (i in 1:length(data[[cols[\"date\"]]])) {\n    if (data[[cols[\"sums\"]]][i]>0) {\n      if (last_median_idx == 1) {\n        last_median_idx <- i\n        medians[i] <- data[[cols[\"date\"]]][last_median_idx]\n      } else {\n        if (data[[cols[\"sums\"]]][i] / 2 > data[[cols[\"sums\"]]][last_median_idx] ) {\n          j <- min(last_median_idx+1,i)\n          while (data[[cols[\"sums\"]]][i] / 2 > data[[cols[\"sums\"]]][j]) {\n            j <- j + 1\n          }\n          last_median_idx <- j - 1\n        }\n        medians[i] <- data[[cols[\"date\"]]][last_median_idx]\n      }\n    }\n  }\n  return(as_date(medians))\n}\n\nnarrowed_comps <- infection_comparisons_wide %>%\n  mutate(fully_vxd_14d = r1r2) %>%\n  select(date, fully_vxd_14d) %>%\n  mutate(fully_vxd_14d_tot = cumsum(fully_vxd_14d))\n\nmedian_age_calcs <- infection_comparisons_wide %>%\n  mutate(med_date = median_date(data = narrowed_comps,\n                                cols=c(date=\"date\", sums=\"fully_vxd_14d_tot\"))) %>%\n  mutate(med_vxd_age\n         = if_else(is.na(med_date),\n                   NA_integer_,\n                   # individuals are only counted into r1r2\n                   # once they are 14 days beyond second dose\n                   as.integer(date) - as.integer(med_date)+14L))\n\nmean_age_values <- tibble(lt_vacc_eff_data) %>%\n  select(date, r1i1_mdsv, r2i2_mdsv, r1i1_john, r2i2_john) %>%\n  unique()\n\n# Join median and mean ages and apply a delta measure ----\n\ninfection_ages <- left_join(infection_comparisons_wide, mean_age_values,\n                            by=c(\"date\")) %>%\n  left_join(median_age_calcs %>%select(date, med_vxd_age), by=c(\"date\")) %>%\n  mutate(delta =\n           ifelse(date < ymd(\"2021-05-20\"),\n                  FALSE,\n                  ifelse( date > ymd(\"2021-07-15\"),\n                          TRUE,\n                          NA)))\n\ninfection_comparisons <- infection_comparisons_wide %>%\n  pivot_longer(\n    cols = !c(\"date\"),\n    values_to = \"count\",\n    names_to = \"event\")\n\ninfection_comparisons_adults <- infection_comparisons_wide_adults %>%\n  pivot_longer(\n    cols = !c(\"date\"),\n    values_to = \"count\",\n    names_to = \"event\")\n\n\n\nFirst consider the daily number of new cases from each population: those who are unvaccinated or within 14 days of their first vaccination dose; those who are between doses; and those who have had both doses of a two dose vaccination regime.\nSince September the number of “breakthrough” cases in fully-vaccinated individuals has grown significantly and is now close to the figure for unvaccinated individuals.\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"r0i0\", \"r0i1\", \"r1i1\", \"r1i2\", \"r2i2\", \"r2i3\", \"r3i3\")) %>%\n  filter(date > ymd(\"2021-01-7\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Individual\\nvaccination\\nstatus\",\n                         breaks = c(\"r0i0\", \"r0i1\", \"r1i1\", \"r1i2\", \"r2i2\", \"r2i3\", \"r3i3\"),\n                         labels = c(\"Unvaccinated or\\nless than 14d\\nafter 1st dose\",\n                                    \"14d after\\n1st dose\",\n                                    \"14+d after\\n1st dose\",\n                                    \"14d after\\n2nd dose\",\n                                    \"14+d after\\n2nd dose\",\n                                    \"14d after\\n3rd dose\",\n                                    \"14+d after\\n3rd dose\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day rolling average\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nLooking at the contribution to the number of cases, these cases in fully-vaccinated individuals have increased fairly steadily since July. The number of cases in partially-vaccinated individuals staying fairly constant reflects that this population is staying fairly stable with steady turnover as people complete their two dose vaccination regime.\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"partially\", \"fully\")) %>%\n  #filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status\",\n                         breaks = c(\"partially\", \"fully\"),\n                         labels = c(\"Partially\", \"Fully\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous( labels = scales::percent,\n                      sec.axis = sec_axis(~ ., labels = scales::percent)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day rolling average as fraction of total infections\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nNormalised by the number of people with each vaccination status, incidence peaked for unvaccinated individuals at over 1.5 in late October. The figures for fully- and partially-vaccinated individuals increased slowly since July and peaked a little later. There are some cases among individuals who have had a third booster shot.\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\")*1000 ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\"),\n                         labels = c(\"Unvaccinated\",\n                                    \"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day average cases per 1000 population with that status\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nVaccine effectiveness is calculated by considering the relative incidence among each population compared with the unvaccinated population. This has shown fairly steady decline in fully-vaccinated individuals since July and is now below 35%.\nThis fading vaccination across the whole population of fully-vaccinated individuals reflects that these vaccinations are aging. Lithuania started vaccinating individuals in early winter 2021. The median “age” of second dose vaccination is over 150 days (on 20 November).\n\nShow code\nmed_age_plot <- median_age_calcs %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=med_vxd_age)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  scale_x_date() +\n  scale_y_continuous(\n    sec.axis = sec_axis(~ .,\n                        breaks = seq(from = 0, to = 240, by = 30),),\n    limits = c(0,NA),\n    breaks = seq(from = 0, to = 240, by = 30),\n    oob = scales::oob_censor)  +\n  labs(x=\"Date\", y=\"Median days\\nsince 2nd dose\")\n\ninf_eff_plot <- infection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  filter(pc_cases_7d_mean<1) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\"),\n                         labels = c(\"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(\n    sec.axis = sec_axis(\n      ~ .,\n      breaks = seq(from = 0, to = 1, by = 0.1),\n      labels = label_percent(accuracy=1)),\n    limits = c(0,1),\n    breaks = seq(from = 0, to = 1, by = 0.1),\n    #limits = c(0,15),\n    labels = label_percent(accuracy=1),\n    oob = scales::oob_censor) +\n  labs(\n       y=\"Effectiveness\",\n       y=\"Date\"\n) +\n  scale_x_date()\n\ninf_eff_plot / med_age_plot + plot_layout(heights = c(2,1)) +\n  plot_annotation(\n    title=\"Lithuania - COVID-19 vaccine effectiveness fades beyond 4 months\",\n       subtitle=\"Calculated on 7 day averages, compared with median days since 2nd dose\",\n    caption=\"Richard Martin-Nielsen\\nData: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_14d_mean = zoo::rollmean(count,k=14, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  filter(pc_cases_14d_mean<1) %>%\n  ggplot(aes(x = date, y=pc_cases_14d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\"),\n                         labels = c(\"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(\n    sec.axis = sec_axis(\n      ~ .,\n      breaks = seq(from = 0, to = 1, by = 0.1),\n      labels = scales::percent),\n    limits = c(0,1),\n    breaks = seq(from = 0, to = 1, by = 0.1),\n    #limits = c(0,15),\n    labels = scales::percent,\n    oob = scales::oob_censor) +\n  labs(title=\"Lithuania - COVID-19 vaccine effectiveness by vaccination status\",\n       subtitle=\"14 day mean\",\n       y=\"Vaccine effectiveness\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nComparing vaccine effectiveness to vaccine age\nOSP provides for each data, the average ages of vaccinations among those who are infected after two doses (r1i1_mdsv and r2i2_mdsv), and I also have a rough calculation of the median age of a double vaccination. (This calculation does not account for removing people who are infected or “censored” from the population, nor for those who have booster shots, so becomes less useful after November when boosters become more common.)\nBoth the charts using the vaccine effectiveness after a single shot show the noisiness of this data - including some values below zero.\nBased on the graph given in an OSP analysis of vaccine effectiveness for a specific cohort1 I estimate that Delta was less than 10% of infections until 20 May 2021 and more than 90% of infections after 15 July 2021. Measurements for this date range will be excluded.\n\nShow code\ninfection_ages %>%\n  filter(r2i2_mdsv>0, !is.na(delta)) %>%\n  mutate(med_vxd_age = med_vxd_age / 7) %>%\n  ggplot(aes(colour=date,y=ve_vs_r0_r2,x=med_vxd_age,group=delta)) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_color_date(name=\"Date\") +\n  geom_smooth() +\n    labs(\n      title=\"Lithuania - COVID-19 fading vaccine effectiveness\",\n      subtitle = \"Compared with median number of weeks since second dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Weeks since second dose (total population)\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\nBreaking the data according to a split of Alpha-dominant time period and Delta-dominant periods we see separate trends for the two periods.\n\nShow code\ninfection_ages %>%\n  filter(r2i2_mdsv>0, !is.na(delta)) %>%\n  mutate( r2i2_mdsv = r2i2_mdsv / 7 ) %>%\n  ggplot(aes(colour=date,y=ve_vs_r0_r2,x=r2i2_mdsv, group=delta)) +\n  geom_point() +\n  annotate(\"text\", x=3,y=0.6,label=\"Alpha-dominant\") +\n  annotate(\"text\", x=20,y=0.8,label=\"Delta-dominant\") +\n  #annotate(\"text\", x=4.5,y=0.25,label=\"Lithuanian data\") +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_color_date(name=\"Date\") +\n  geom_smooth() +\n      labs(\n      title=\"Lithuania - COVID-19 fading vaccine effectiveness\",\n      subtitle = \"Compared with average number of weeks since second dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Average weeks since second dose for confirmed cases\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\nCalculations for vaccine effectiveness after a single dose\nThese are problematic, with some figures showing negative vaccine effectiveness. I think this is a small numbers problem where the number of cases recorded each day is quite low and so the uncertainty of when cases “should” be recorded may result in very noisy data. I plan to aggregate these figures by date of report to see if some of these problems may be resolved.\n\nShow code\ninfection_ages %>%\n  filter(r1i1_john>0) %>%\n  mutate(r1i1_john = r1i1_john / 100) %>%\n  ggplot(aes(colour=date,y=ve_vs_r0_r1,x=r1i1_john)) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_x_continuous(labels = scales::percent_format()) +\n  scale_color_date(name=\"Date\") +\n  geom_smooth() +\n      labs(\n      title=\"Lithuania - COVID-19 vaccine effectiveness\",\n      subtitle = \"Janssen vaccinations among those infected after one dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Percentage of Janssen vaccinations\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\n\nShow code\ninfection_ages %>%\n  filter(r1i1_mdsv>7) %>%\n  mutate( r1i1_mdsv = r1i1_mdsv / 7 ) %>%\n  ggplot(aes(colour=r1i1_john,y=ve_vs_r0_r1,x=r1i1_mdsv)) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_x_continuous() +\n  scale_color_continuous(name = \"Percent Janssen vaccinations among infected\") +\n  geom_smooth() +\n      labs(\n      title=\"Lithuania - COVID-19 fading vaccine effectiveness\",\n      subtitle = \"Compared with time since first dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Mean weeks since first dose\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\nComparison with vaccine-specific UK results\nA UK preprint2 analyses vaccine effectiveness in the UK for three vaccines against symptomatic disease, hospitalisation and death.\nThe UK study’s approach cannot be replicated with the available open data for Lithuania, but the overall results for vaccine effectiveness in protection from disease may be compared, with some limitations based on the differing data available.\nLithuanian data and approximations\nFor each day, Lithuania provides the mean days since vaccination for all those fall ill more than 14 days after having had two doses of vaccine.3 This value varies compared with the median number of days since vaccination for the entire vaccinated population, which can also be calculated from available open data. This is used to assign all of the cases for a particular day into one of the groups, approximating all the cases by their mean.\nLithuania does not release data differentiating between cases in people vaccinated with one vaccine or another. There is a temporal trend (individuals vaccinated earlier are more likely to be vaccinated with Vaxzevria than Comirnaty) and there are specific occupation-related and age-related biases, but there is no way to usefully “guess” the vaccine make-up among cases of any particular day.\nLithuania does provide age disaggregated data so it would be possible to make comparisons based on age cohorts but the mean days since vaccination figure is not disaggregated, meaning that the mean value may mask significant variance among age groups.\n\nShow code\ninfn_age_bins <- infection_ages %>%\n  mutate(\n    r2i2_mdsv_weeks = r2i2_mdsv / 7,\n    med_vxd_age_weeks = med_vxd_age / 7,\n    mdsv_age_bin =\n      case_when(\n        r2i2_mdsv_weeks <= 1 ~ \"week 1\",\n        r2i2_mdsv_weeks <= 9 ~ \"2-9 weeks\",\n        r2i2_mdsv_weeks <= 14 ~ \"10-14 weeks\",\n        r2i2_mdsv_weeks <= 19 ~ \"15-19 weeks\",\n        TRUE ~ \"20+ weeks\"\n      ),\n    md_vxd_age_bin =\n      case_when(\n        med_vxd_age_weeks <= 1 ~ \"week 1\",\n        med_vxd_age_weeks <= 9 ~ \"2-9 weeks\",\n        med_vxd_age_weeks <= 14 ~ \"10-14 weeks\",\n        med_vxd_age_weeks <= 19 ~ \"15-19 weeks\",\n        TRUE ~ \"20+ weeks\"\n      )\n    ) %>%\n  mutate(\n    md_vxd_age_bin =\n      factor(if_else(is.na(med_vxd_age), NA_character_, md_vxd_age_bin),\n             c(\"week 1\",  \"2-9 weeks\", \"10-14 weeks\", \"15-19 weeks\", \"20+ weeks\"),\n             ordered=TRUE),\n         mdsv_age_bin = factor(if_else(is.na(r2i2_mdsv), NA_character_, mdsv_age_bin),\n             c(\"week 1\",  \"2-9 weeks\", \"10-14 weeks\", \"15-19 weeks\", \"20+ weeks\"),\n             ordered=TRUE)\n         )\n\nbinned_ve_calcs_r2 <- infn_age_bins %>%\n  filter(!is.na(delta), !is.na(mdsv_age_bin)) %>%\n  group_by(delta,mdsv_age_bin) %>%\n  summarise(mean(ve_vs_r0_r2*100), sd(ve_vs_r0_r2*100), sd(r_pop_r0)) %>%\n  mutate(`Dominant strain` = if_else(delta, \"Delta\", \"Alpha\"), .before=delta) %>%\n  rename(`Mean weeks since vaccination`=mdsv_age_bin,\n         `Vaccine effectiveness [%]`=`mean(ve_vs_r0_r2 * 100)`,\n         `Standard deviation [%]`=`sd(ve_vs_r0_r2 * 100)`,\n         `Susceptible population standard deviation`=`sd(r_pop_r0)`) %>%\n  ungroup() %>%\n  select(-`delta`)\n\nquibble <- function(x, q = c(0.05, 0.5, 0.95)) {\n  tibble(x = quantile(x, q), q = q)\n}\npercentile_ve_calcs_r2 <- infn_age_bins %>%\n  filter(!is.na(delta), !is.na(mdsv_age_bin)) %>%\n  group_by(delta,mdsv_age_bin) %>%\n  summarise(quibble(ve_vs_r0_r2)) %>%\n  pivot_wider(id_cols=c(delta, mdsv_age_bin), values_from = c(x), names_from = c(q), names_prefix = \"ci_\")\npretty_percentiles <- percentile_ve_calcs_r2 %>%\n  ungroup() %>%\n  transmute(`Dominant strain` = if_else(delta, \"Delta\", \"Alpha\"),\n         `Mean weeks since vaccination`=mdsv_age_bin,\n         `Vaccine effectiveness [%]`=sprintf(\"%.1f (%.1f to %.1f)\", `ci_0.5`*100, `ci_0.05`*100, `ci_0.95`*100))\n  \n# infn_age_bins %>% group_by(mdsv_age_bin, delta) %>%\n#   count()\n\n# library(boot)\n# mean_ve <- function(formula, data, indices) {\n#   d <- data[indices,] # allows boot to select sample\n#   return(mean( d))\n#   #return(summary(fit)$r.square)\n# }\n# m_ve <- function(d,w) mean(d$ve_vs_r0_r2)\n# boot_ve <- boot(data=select(infn_age_bins, date, ve_vs_r0_r2,delta, r2i2_mdsv)%>%filter(r2i2_mdsv > 20,delta, !is.na(ve_vs_r0_r2)), statistic=m_ve, R=1000)\n# boot.ci(boot_ve)\n\n#knitr::kable(binned_ve_calcs_r2, digits = 2)\nknitr::kable(pretty_percentiles)\n\n\nDominant strain\nMean weeks since vaccination\nVaccine effectiveness [%]\nAlpha\nweek 1\n76.8 (70.6 to 94.5)\nAlpha\n2-9 weeks\n86.4 (66.1 to 93.1)\nAlpha\n10-14 weeks\n89.0 (86.3 to 94.3)\nDelta\n2-9 weeks\n81.2 (75.2 to 90.5)\nDelta\n10-14 weeks\n76.5 (72.1 to 82.9)\nDelta\n15-19 weeks\n72.1 (68.7 to 75.5)\nDelta\n20+ weeks\n55.9 (13.1 to 66.1)\n\nThe different trends for the two periods with Alpha- and Delta-dominance are also visible.\n\nShow code\ninfn_age_bins %>%\n  filter(!is.na(delta), !is.na(mdsv_age_bin)) %>%\n  mutate(delta = if_else(delta, \"Delta\", \"Alpha\")) %>%\n  ggplot(aes(x=mdsv_age_bin, y=ve_vs_r0_r2)) +\n  scale_y_continuous(limits=c(0,1),labels = scales::percent) +\n  geom_boxplot() +\n  geom_jitter(alpha=0.5) +\n  facet_grid(cols=vars(delta)) +\n    theme(plot.caption=element_text(size = rel(0.8)),\n          plot.title=element_text(size = rel(1.2)),\n          axis.text.x=element_text(size = rel(0.8)) ) +\n  labs(\n      title=\"Vaccine effectiveness against COVID infection\",\n      subtitle = \"In Alpha- and Delta-dominant periods\",\n      y=\"Vaccine effectiveness [%]\",\n      x=\"Weeks since second dose\",\n      caption=\"Data: Official Statistics Portal, Lithuania\")\n\n\n\n\nComparison with UK data\nThe UK results for vaccine effectiveness giving protection against symptomatic disease are transcribed from Table 1 of the paper.4\n\nShow code\nuk_values <- read_excel(\"UK Paper Tables.xlsx\", sheet= \"Table 1\") %>%\n  mutate(Cohort\n         = factor(Cohort,\n                  c(\"week 1\",  \"2-9 weeks\", \"10-14 weeks\", \"15-19 weeks\", \"20+ weeks\"),\n                  ordered=TRUE),\n         `Age group`\n         = factor(`Age group`,\n                  c(\"16+\",  \"16-39\", \"40-64\", \"65+\"),\n                  ordered=TRUE))\nuk_values %>%\n  mutate(Value = Value/100) %>%\n  pivot_wider(id_cols = c(\"Vaccine\", \"Age group\", \"Cohort\"),\n              names_from = \"Estimate\",\n              values_from = \"Value\"\n              ) %>%\n  ggplot(aes(x=Cohort, y=Centre, ymin=Lower, ymax=Upper)) +\n  #geom_point() +\n  scale_y_continuous(limits=c(0,1),labels = scales::percent) +\n  geom_crossbar(size=0.2,width=0.25) +\n  #geom_errorbar(mapping=aes(ymin=Lower,ymax=Upper)) +\n  facet_grid(rows=vars(Vaccine), cols=vars(`Age group`)) +\n  theme(plot.caption=element_text(size = rel(0.5)),\n          plot.title=element_text(size = rel(1.2)),\n          axis.text.x=element_text(size = rel(0.4)) ) +\n  labs(\n      title=\"Vaccine effectiveness against symptomatic disease from Delta\",\n      subtitle = \"UK data from Nick Andrews et al.\",\n      y=\"Vaccine effectiveness [%]\",\n      x=\"Weeks since second dose\",\n      caption=\"Reproduced with data from \\\"Vaccine effectiveness and duration of protection of Comirnaty, Vaxzevria and Spikevax against mild and severe COVID-19 in the UK\\\", Table 1\\nNick Andrews, Elise Tessier, Julia Stowe, Charlotte Gower, Freja Kirsebom, Ruth Simmons, Eileen Gallagher,\\nMeera Chand, Kevin Brown, Shamez N Ladhani, Mary Ramsay, Jamie Lopez Bernal\")\n\n\n\n\nThis gives results for four different overlapping age groups. The 16+ has the best overlap with available Lithuanian data.\n\nShow code\nuk_values %>%\n  mutate(Value = Value/100) %>%\n  filter(`Age group`==\"16+\") %>%\n  pivot_wider(id_cols = c(\"Vaccine\", \"Age group\", \"Cohort\"),\n              names_from = \"Estimate\",\n              values_from = \"Value\"\n              ) %>%\n  ggplot(aes(x=Cohort, y=Centre, ymin=Lower, ymax=Upper, shape=`Vaccine`)) +\n  #geom_point() +\n  scale_y_continuous(limits=c(0,1),labels = scales::percent) +\n  geom_pointrange(size=0.5,width=0.5, position=\"jitter\") +\n  #geom_errorbar(mapping=aes(ymin=Lower,ymax=Upper)) +\n  #facet_grid(rows=vars(Vaccine), cols=vars(`Age group`)) +\n  theme(plot.caption=element_text(size = rel(0.5)),\n          plot.title=element_text(size = rel(1.2)),\n          axis.text.x=element_text(size = rel(0.8)) ) +\n  labs(\n      title=\"Vaccine effectiveness against symptomatic disease from Delta\",\n      subtitle = \"UK data from Nick Andrews et al., all ages 16+\",\n      y=\"Vaccine effectiveness [%]\",\n      x=\"Weeks since second dose\",\n      caption=\"Reproduced with data from \\\"Vaccine effectiveness and duration of protection of Comirnaty, Vaxzevria and Spikevax against mild and severe COVID-19 in the UK\\\", Table 1\\nNick Andrews, Elise Tessier, Julia Stowe, Charlotte Gower, Freja Kirsebom, Ruth Simmons, Eileen Gallagher,\\nMeera Chand, Kevin Brown, Shamez N Ladhani, Mary Ramsay, Jamie Lopez Bernal\")\n\n\n\n\nFinally the comparison can be between Lithuanian data for all age groups with UK results for individuals 16+ using one of the two vaccines most commonly used in Lithuania.\n\nShow code\nuk_values %>%\n  mutate(Value = Value/100) %>%\n  filter(`Age group`==\"16+\", `Vaccine`!=\"Spikevax\") %>%\n  pivot_wider(id_cols = c(\"Vaccine\", \"Age group\", \"Cohort\"),\n              names_from = \"Estimate\",\n              values_from = \"Value\"\n              ) %>%\n  ggplot() +\n  scale_y_continuous(limits=c(0,1),labels = scales::percent) +\n  geom_pointrange(mapping=aes(x=Cohort, y=Centre, ymin=Lower, ymax=Upper, shape=`Vaccine`),\n                  size=0.5,width=0.5, position=position_jitter(width=0.05)) +\n\n   geom_boxplot(data=infn_age_bins %>%\n                  filter(delta==TRUE, !is.na(mdsv_age_bin)),\n                mapping=aes(x=mdsv_age_bin, y=ve_vs_r0_r2),colour=\"grey\") +\n  geom_jitter(data=infn_age_bins %>%\n                filter(delta==TRUE, !is.na(mdsv_age_bin)),\n              mapping=aes(x=mdsv_age_bin, y=ve_vs_r0_r2),\n              alpha=0.5,colour=\"grey\") +\n  annotate(\"text\", x=1,y=0.55,label=\"Vaxzevria\") +\n  annotate(\"text\", x=5,y=0.8,label=\"Comirnaty\") +\n  annotate(\"text\", x=4.5,y=0.25,label=\"Lithuanian data\") +\n  theme(plot.caption=element_text(size = rel(0.6)),\n          plot.title=element_text(size = rel(1.2)),\n        plot.subtitle=element_text(size = rel(0.8)),\n          axis.text.x=element_text(size = rel(1)),\n        legend.position = \"none\") +\n  labs(\n      title=\"Vaccine effectiveness against Delta in Lithuania and the UK\",\n      subtitle = \"UK: Comirnaty and Vaxzevria protection against symptomatic disease\\nLithuania: Aggregated mix (mainly Vaxzevria & Comirnaty) against confirmed cases\",\n      y=\"Vaccine effectiveness [%]\",\n      x=\"Weeks since second dose\",\n      caption=\"UK data from \\\"Vaccine effectiveness and duration of protection of Comirnaty, Vaxzevria and Spikevax against mild and severe COVID-19 in the UK\\\", Table 1\\nNick Andrews, Elise Tessier, Julia Stowe, Charlotte Gower, Freja Kirsebom, Ruth Simmons, Eileen Gallagher,\\nMeera Chand, Kevin Brown, Shamez N Ladhani, Mary Ramsay, Jamie Lopez Bernal\\nLithuania data from the Official Statistics Portal\")\n\n\n\n\nComments on the comparison\nLithuania did not (unlike the UK and Canada) extend the spacing between first and second doses of Vaxzevria or other vaccines so even if the data were available to differentiate vaccine effectiveness for the different vaccines in use, the resulting effectiveness in Lithuania probably differs because of this difference in how the same vaccines were administered.\nLithuanian figures all fall between the UK’s vaccine-specific values for the two vaccines in use, reflecting the mix of vaccines in use in the Lithuanian population (and that this mix is masked by aggregation of the open data available). Vaxzevria was used much more earlier in 2021 than Comirnaty, meaning that “older” vaccinations are more likely to be with Vaxzevria, which may explain why the Lithuanian data for 20+ weeks are closer to the the UK Vaxzevria values than the Comirnaty value.\nLithuania’s vaccination rate for under 18 is very low (and zero below 12). It is not clear whether this comparison would be improved by excluding all Lithuanians under 20.\nCalculations excluding under-20s\nBecause the level rate of vaccination among Lithuanians below the age of 20 is much lower than in the rest of the population, I also present calculations which only consider the population of 20 and above.\nFirst, here is a chart from the OSP showing the vaccination status by age group.\nFigure from https://osp.stat.gov.ltThe vaccine is not available for children under the age of 11, and though figures for 18 and 19 year-olds are comparable with older adults, the data for vaccination and infection/censoring are only available on 20 year increments.\n\nShow code\ninfection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"partially\", \"fully\")) %>%\n  #filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status\",\n                         breaks = c(\"partially\", \"fully\"),\n                         labels = c(\"Partially\", \"Fully\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous( labels = scales::percent,\n                      sec.axis = sec_axis(~ ., labels = scales::percent)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status - 20+ only\",\n       subtitle=\"7 day rolling average as fraction of total infections\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\nShow code\ninfection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\")*1000 ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\"),\n                         labels = c(\"Unvaccinated\",\n                                    \"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status, 20+ only\",\n       subtitle=\"7 day average cases per 1000 population with that status\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\nShow code\ninf_eff_plot_adults <- infection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  filter(pc_cases_7d_mean<1) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\"),\n                         labels = c(\"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(\n    sec.axis = sec_axis(\n      ~ .,\n      breaks = seq(from = 0, to = 1, by = 0.1),\n      labels = label_percent(accuracy=1)),\n    limits = c(0,1),\n    breaks = seq(from = 0, to = 1, by = 0.1),\n    #limits = c(0,15),\n    labels = label_percent(accuracy=1),\n    oob = scales::oob_censor) +\n  labs(\n       y=\"Effectiveness\",\n       y=\"Date\"\n) +\n  scale_x_date()\n\ninf_eff_plot_adults / med_age_plot + plot_layout(heights = c(2,1)) +\n  plot_annotation(\n    title=\"Lithuania - COVID-19 vaccine effectiveness fades beyond 4 months\",\n       subtitle=\"Calculated on 7 day averages, ages 20+, compared with median days since 2nd dose\",\n    caption=\"Richard Martin-Nielsen\\nData: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\nDataset description (English translation)\ngoogle translation of original Lithuanian5\nThe table is intended for monitoring the incidence of infections in four groups of the Lithuanian population: unvaccinated and those who received one / two / three doses of vaccine. The columns in the table describe how many events of each type occurred on a particular day. A total of 17 events are described. Events can only happen to Lithuanian residents who have never been infected before. Event tracking begins on January 1, 2021. The table is aggregated by date, municipality (60 units), gender (2 units), age group (8 units), so each row describes the number of events that occurred on a specific date for a specific age-specific population in a particular municipality.\nAn integral part of this table is the auxiliary table “Initial conditions, on 01.01.2021”, which describes the number of persons who may become infected at the beginning of 2021-01-01. Only with these two tables is it possible to calculate the frequency of infections (normalized daily number of infections) per day from which preliminary conclusions on the efficacy of vaccines can be drawn.\nColumn description:\nfield\ndescription\ndate\nis the day of 2021 on which the events described in the following columns occurred\nmunicipality\nthe municipality of the declared place of residence, describing the group of persons participating in the events\nsex\ngender describing the group of persons involved in the events: V = men, M = women\nage_gr\nan age category that describes the group of people participating in the events\nr0i0\nunvaccinated * who became infected for the first time (event - first infection)\nr0r1\nunvaccinated * who have been vaccinated (event - vaccination)\nr0c0\nunvaccinated * who fell out of the risk of infection (“censored” persons, statistical term, **)\nr0i1\nunvaccinated * who have been vaccinated and become infected for the first time\nr0c1\nunvaccinated * who have been vaccinated and are at risk of becoming infected\nr1i1\n1 dose vaccinated * who became infected for the first time\nr1r2\n1 dose vaccinated * who became vaccinated with the second dose\nr1c1\n1 dose vaccinated * who were at risk of infection (“censored” persons, statistical term, **)\nr1i2\n1 dose vaccine * who became vaccinated with a second dose and became infected for the first time\nr1c2\n1 dose vaccine * who became vaccinated with the second dose and were at risk of infection\nr2i2\n2 doses to be vaccinated * who became infected for the first time\nr2r3\n2 doses to be vaccinated *, which became the third dose\nr2c2\n2 doses to be vaccinated * who fell out of the risk of infection (“censored” persons, statistical term, **)\nr2i3\n2 doses *, which became the third dose and became infected for the first time\nr2c3\n2 doses * that became the third dose and fell out of the risk of infection\nr3i3\n3 doses to be vaccinated * who became infected for the first time\nr3c3\n3 doses to be vaccinated * who fell out of the risk of infection (“censored” persons, statistical term, ***)\nr1i1_mdsv\naverage number of days since the first vaccination in the r1i1 group (***)\nr2i2_mdsv\naverage number of days since the second vaccination in the r2i2 group (***)\nr1i1_john\npercentage of Janssen vaccine recipients in the r1i1 group (***)\nr2i2_john\npercentage of vaccinated Janssen vaccine (as first dose) in the r2i2 group (***)\nColumn naming logic:\nfirst pair of two characters (eg “r1”) - what state the persons “leave” during the described event\nsecond pair of two characters (eg “i2”) - what state persons “enter” during the described event\nfirst character of the character pair (letter)\n\nr\n‘at risk’; people who may become infected (i.e., this has not happened before)\ni\n‘infected’; persons who are infected (first positive diagnostic test)\nc\n‘censored’; persons who are not and cannot be infected (**)\nsecond character of the character pair (number)\n\n0\npersons who have not yet been vaccinated on a given day or have been vaccinated very recently (<in the course of 14 days) *\n1\npersons who have already been vaccinated on a given day 14 days after the first dose or who have received a second dose very recently (<in the course of 14 days) *\n2\npersons who have been vaccinated for 14 days on a given day since the second dose or who have received a third dose very recently (<14 days) *\n3\npersons who have already 14 days since the third dose of the vaccine on a given day *\nFigure from the OSP, annotated in EnglishFootnotes:\n* The effect of the vaccine is considered to start on day 14 from the actual date of vaccination, so in this table describing the effectiveness of the vaccines, the person is considered unvaccinated on the actual day of the first vaccination (as well as on the thirteenth day after the first vaccination). The same principle applies to the second and third doses of the vaccine: they take effect on the 14th day after the actual date of the vaccination.\n** unsupervised persons (without ‘follow-up’, ‘censored’), e.g. due to emigration, lost contact, death, etc.\n*** calculated for all municipalities, all genders, all age groups in total (for confidentiality)\nDataset description (Lithuanian original)\nLentelė yra skirta užsikrėtimų dažniams stebėti keturiose Lietuvos gyventojų grupėse: neskiepytųjų bei skiepytųjų viena/dviem/trim vakcinos dozėmis. Lentelės stulpeliai aprašo, kiek kiekvienos rūšies įvykių įvyko konkrečią dieną. Iš viso yra aprašoma 17 įvykių. Įvykiai gali įvykti tik su iki tol dar niekada neužsikrėtusiais Lietuvos gyventojais. Įvykių stebėjimas prasideda nuo 2021 metų sausio 1 dienos. Lentelė yra agreguota pagal datą, savivaldybę (60 vnt), lytį (2 vnt), amžiaus grupę (8 vnt), tad kiekviena eilutė aprašo įvykių skaičių, kuris nutiko konkrečią datą konkrečios savivaldybės konkrečios lyties konkrečios amžiaus grupės gyventojams.\nŠios lentelės neatsiejama dalis yra pagalbinė lentelė “Pradinės būsenos, 2021-01-01 dieną”, kuri aprašo asmenų, galinčių užsikrėsti skaičių 2021-01-01 dienos pradžioje. Tik turint šias abi lenteles įmanoma suskaičiuoti užsikrėtimų dažnį (normalizuotą dieninį užsikrėtimų skaičių) padieniui, iš kurio galima daryti preliminarias išvadas apie vakcinų efektyvumą.\nStulpelių aprašymas:\nfield\ndescription\ndate\n2021 metų diena, kurios metu įvyko tolimesniuose stulpeliuose aprašomi įvykiai\nmunicipality\ndeklaruotos gyvenamosios vietos savivaldybė, aprašanti įvykiuose dalyvaujančių asmenų grupę\nsex\nlytis, aprašanti įvykiuose dalyvaujančių asmenų grupę: V = vyrai, M = moterys\nage_gr\namžiaus kategorija, aprašanti įvykiuose dalyvaujančių asmenų grupę\nr0i0\nneskiepyti*, kurie pirmą kartą tapo užsikrėtusiais (įvykis - pirmas užsikrėtimas)\nr0r1\nneskiepyti*, kurie tapo paskiepytais (įvykis - paskiepijimas)\nr0c0\nneskiepyti*, kurie iškrito iš rizikos užsikrėsti (“cenzūruoti” asmenys, statistikos terminas, **)\nr0i1\nneskiepyti*, kurie tapo paskiepytais ir pirmą kartą tapo užsikrėtusiais\nr0c1\nneskiepyti*, kurie tapo paskiepytais ir iškrito iš rizikos užsikrėsti\nr1i1\n1 doze skiepyti*, kurie pirmą kartą tapo užsikrėtusiais\nr1r2\n1 doze skiepyti*, kurie tapo paskiepytais antra doze\nr1c1\n1 doze skiepyti*, kurie iškrito iš rizikos užsikrėsti (“cenzūruoti” asmenys, statistikos terminas, **)\nr1i2\n1 doze skiepyti*, kurie tapo paskiepytais antra doze ir pirmą kartą tapo užsikrėtusiais\nr1c2\n1 doze skiepyti*, kurie tapo paskiepytais antra doze ir iškrito iš rizikos užsikrėsti\nr2i2\n2 dozėm skiepyti*, kurie pirmą kartą tapo užsikrėtusiais\nr2r3\n2 dozėm skiepyti*, kurie tapo paskiepytais trečia doze\nr2c2\n2 dozėm skiepyti*, kurie iškrito iš rizikos užsikrėsti (“cenzūruoti” asmenys, statistikos terminas, **)\nr2i3\n2 dozėm skiepyti*, kurie tapo paskiepytais trečia doze ir pirmą kartą tapo užsikrėtusiais\nr2c3\n2 dozėm skiepyti*, kurie tapo paskiepytais trečia doze ir iškrito iš rizikos užsikrėsti\nr3i3\n3 dozėm skiepyti*, kurie pirmą kartą tapo užsikrėtusiais\nr3c3\n3 dozėm skiepyti, kurie iškrito iš rizikos užsikrėsti (“cenzūruoti” asmenys, statistikos terminas, **)\nr1i1_mdsv\nvidutinis dienų skaičius praėjęs nuo pirmo skiepo r1i1 asmenų grupėje (***)\nr2i2_mdsv\nvidutinis dienų skaičius praėjęs nuo antro skiepo r2i2 asmenų grupėje (***)\nr1i1_john\nvakcinuotųjų “Janssen” vakcina procentas r1i1 asmenų grupėje (***)\nr2i2_john\nvakcinuotųjų “Janssen” vakcina (kaip pirma doze) procentas r2i2 asmenų grupėje (***)\nStulpelių pavadinimo sudarymo logika:\npirma dviejų simbolių pora (pvz “r1”) - iš kokios būsenos asmenys “išeina” aprašomo įvykio metu\nantra dviejų simbolių pora (pvz “i2”) - į kokią būseną asmenys “įeina” aprašomo įvykio metu\npirmas simbolių poros simbolis (raidė):\n\nr\n‘at risk’; asmenys, kurie gali užsikrėsti (t.y., tai dar neatsitiko anksčiau)\ni\n‘infected’; asmenys, kurie yra užsikrėtę (pirmas teigiamas diagnostinis testas)\nc\n‘censored’; asmenys, kurie nėra užsikrėtę ir negali užsikrėsti (**)\nantras simbolių poros simbolis (skaičius):\n\n0\nasmenys, kurie konkrečią dieną dar yra neskiepyti arba yra paskiepyti labai neseniai (<14 d. eigoje) *\n1\nasmenys, kuriems konkrečią dieną nuo pirmos skiepo dozės jau yra praėję 14 dienų, arba jie yra paskiepyti antra doze labai neseniai (<14 d. eigoje) *\n2\nasmenys, kuriems konkrečią dieną nuo antros skiepo dozės jau yra praėję 14 dienų, arba jie yra paskiepyti trečia doze labai neseniai (<14 d. eigoje) *\n3\nasmenys, kuriems konkrečią dieną nuo trečios skiepo dozės jau yra praėję 14 dienų *\nDetali lentelės turinio paaiškinimo logika iliustracijoje:\nFigure from OSPIšnašos:\n* laikoma, kad vakcinos efektas prasideda 14-ą dieną nuo faktinės skiepijimo datos, tad šioje lentelėje, aprašančioje vakcinų efektyvumą, asmuo faktinę pirmo skiepo dieną (o taip pat ir tryliktą dieną po pirmo skiepo) yra laikomas nevakcinuotu. Toks pat principas taikomas ir antrai bei trečiai skiepo dozėms: jos įsigalioja 14-ą dieną nuo faktinės skiepijimo datos.\n** nebestebimi asmenys (be ‘follow-up’, ‘censored’), pvz. dėl emigracijos, prarasto kontakto, mirties ir pan.\n*** apskaičiuota visoms savivaldybėms, visom lytims, visoms amžiaus grupėms bendrai (dėl konfidencialumo)\n\n https://osp.stat.gov.lt/documents/10180/9098881/Pfizer_Delta_efektyvumas_20210915_v1_JB.pdf, accessed from https://osp.stat.gov.lt/duomenu-apzvalga-2021-09-15↩︎\nVaccine effectiveness and duration of protection of Comirnaty, Vaxzevria and Spikevax against mild and severe COVID-19 in the UK\", by Nick Andrews, Elise Tessier, Julia Stowe, Charlotte Gower, Freja Kirsebom, Ruth Simmons, Eileen Gallagher, Meera Chand, Kevin Brown, Shamez N Ladhani, Mary Ramsay, Jamie Lopez Bernal, doi: https://doi.org/10.1101/2021.09.15.21263583↩︎\nThis is the r2i2_mdsv column.↩︎\nVaccine effectiveness and duration of protection of Comirnaty, Vaxzevria and Spikevax against mild and severe COVID-19 in the UK\", by Nick Andrews, Elise Tessier, Julia Stowe, Charlotte Gower, Freja Kirsebom, Ruth Simmons, Eileen Gallagher, Meera Chand, Kevin Brown, Shamez N Ladhani, Mary Ramsay, Jamie Lopez Bernal, doi: https://doi.org/10.1101/2021.09.15.21263583↩︎\nhttps://open-data-ls-osp-sdg.hub.arcgis.com/datasets/1fd352a1c4534afe8ff87c564c0724c0_0/about↩︎\n",
      "last_modified": "2022-05-10T10:42:02+00:00"
    },
    {
      "path": "hospitalisations.html",
      "title": "Hospital occupancy in the Omicron wave",
      "description": "Hospital occupancy during the Omicron wave in Lithuania",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\nThe Omicron wave is different\nAs has been seen in many other countries, the Omicron wave of COVID-19 has shown a weaker link between case incidence and hospitalisation data. This may be attributed to the variant itself, to prior exposure to other variants, or to increased vaccination rates.\nLithuania is not much different and using data from the Official Statistics Portal we can compare time-averaged values for case incidence, hospital admissions with COVID-19, admissions requiring oxygen, admissions requiring mechanical ventilation and deaths due directly to COVID.1\nThe Omicron wave compared to others\nAs seen elsewhere, hospitalisation and deaths are much less correlated with incidence in the latest wave than in previous waves. This graph (similar to graphs from the Financial Times by John Burn-Murdoch) adjusts all curves, setting 100 as the maximum of the December 2020 wave (Lithuania’s pre-Omicron maximum). This also shows the time delay seen between the curves in previous waves.\n\nShow code\nlt_hosp_cv19 <- lt_hosp_data %>%\n  filter(str_detect(event, \"^cv19.*admissions\")\n         |str_detect(event, \"^cv19.*in_use\")\n         |str_detect(event, \"^cv19.*delta\")\n         |str_detect(event, \"^cv19.*occupied\")) %>%\n  mutate( event = gsub(\"cv19_\",\"\", event)) %>%\n  mutate( event = gsub(\"_r7m.*\",\"\", event)) %>%\n  mutate( event = str_to_title(gsub(\"_\",\" \", event))) %>%\n    mutate(event = case_when(\n    event == \"Admissions Oxygen\" ~ \"Admissions with Oxygen\",\n    event == \"Admissions Mv\"     ~ \"Admissions on Ventilator\",\n    event == \"Deaths Cov1\"       ~ \"Deaths\", \n    #event == \"Hospital Beds Occupied\" ~ \"Admissions with Oxygen\",\n    \n    #event == \"Admissions Mv\"     ~ \"Admissions on Ventilator\",\n    TRUE ~ event\n  ))\nevents_to_plot <- c(\n               \"Hospital Beds Occupied\",\n               \"Oxygen Beds Occupied\",\n              # \"Mv Beds Occupied\",\n               \"Icu Beds Occupied\"\n              # \"Icu Mv Beds Occupied\", \n              # \"Icu Ecmo In Use\",\n              #\"Admissions\", \n              #\"with Oxygen\",\n              #\"on Ventilator\"\n              )\n\nlt_case_deaths <- lt_aggregate %>%\n  group_by(date) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE)), .groups = \"drop\") %>%\n  mutate(date = as_date(date)) %>%\n  pivot_longer(\n    cols = !c(\"date\"),\n    values_to = \"count\",\n    names_to = \"event\") %>%\n    mutate( event = str_to_title(gsub(\"_\",\" \", event))) %>%\n  group_by(event) %>%\n  mutate(count = zoo::rollmean(count,k=7, fill=NA, align=\"right\") ) %>%\n  ungroup()\n\nlt_hosp_cv19_max <- lt_hosp_cv19 %>%\n  bind_rows(lt_case_deaths) %>%  \n  filter(date > ymd(\"2020-11-01\") & date < ymd(\"2021-7-01\") ) %>%\n  group_by(event) %>%\n  summarise(max = max(count)) %>%\n  # fudge things slightly: admissions must be > admissions O2 so we'll set it to 250\n  mutate(max = if_else(event == \"Admissions\", 250, max))\n  \nlt_hosp_nrml <- left_join(bind_rows(lt_hosp_cv19, lt_case_deaths), lt_hosp_cv19_max, by=c(\"event\")) %>%\n  # mutate( count = case_when(\n  #   event==\"Admissions\" && count == 0  ~ NA_real_,\n  #   TRUE ~ count ) ) %>%\n  # filter(!(event == \"Admissions\" & count == 0)) %>%\n  mutate(normalised= count / max * 100) %>%\n    filter(event %in% c(\n      #\"Icu Ecmo In Use\",\n                      #  \"Admissions\",\n                        # \"with Oxygen\",\n                        # \"on Ventilator\",\n                        \"Hospital Beds Occupied\",\n                        \"Oxygen Beds Occupied\",\n                        # \"Mv Beds Occupied\",\n                        \"Icu Beds Occupied\",\n                      \"New Cases\",\n                      \"Deaths Cov1\"\n                      #\"Icu Ecmo In Use\"\n                      )) %>%\n  mutate(event = case_when(\n    event == \"Deaths Cov1\"            ~ \"Deaths\", \n    event == \"Hospital Beds Occupied\" ~ \"COVID-19 Beds\",\n    event == \"Oxygen Beds Occupied\"   ~ \"Beds with O2\",\n    event == \"Icu Beds Occupied\"      ~ \"ICU\",\n    TRUE ~ event\n  )) %>%\n  #filter(!(event==\"Admissions\" && normalised == 0)) %>%\n  arrange(date)\n\nlt_hosp_nrml %>%\n  ggplot(aes(x=date,y=normalised, colour=event)) +\n  geom_line(size=1) +\n    geom_text_repel(aes(x=date,y=normalised,label=event,colour=event),\n                  nudge_x=100,\n                  direction=\"y\",hjust=\"right\",\n                  data = arrange(lt_hosp_nrml,event,date)%>%\n                    group_by(event)%>%\n                    summarise(across(everything(), last)) ) +\n                  #data=group_by(lt_hosp_nrml%>%filter(date == ymd(\"2022-01-13\")), event)%>%tail(6)) +\n  geom_hline(yintercept = 100) +\n  ft_theme() +\n  scale_color_ft(\"origami primary\") +\n  theme(legend.position = \"none\") +\n    labs(title=\"Lithuania - Case, Hospitalisation and Deaths data\",\n       subtitle=\"7 day averages - December 2020 wave max = 100\",\n       y=\"\",\n       x=\"Date\",\n       caption=paste0(\"\", caption_text)) +\n  scale_x_date(limits = c(ymd(\"2020-12-01\",NA)),expand = expansion(add = c(0,100))) +\n  scale_y_continuous(limits = c(0,NA))\n\n\n\n\nHospital occupancy since late 2020\nThis plot shows COVID-19 related hospital bed occupancy since late 2020.\n\nShow code\nlt_hosp_occupancy_labelled <- lt_hosp_cv19 %>%\n  filter( event %in% events_to_plot) %>%\n    mutate(event = case_when(\n    event == \"Deaths Cov1\"            ~ \"Deaths\", \n    event == \"Hospital Beds Occupied\" ~ \"COVID-19 Beds\",\n    event == \"Oxygen Beds Occupied\"   ~ \"Beds with O2\",\n    event == \"Icu Beds Occupied\"      ~ \"ICU\",\n    TRUE ~ event\n  ))\n\nlt_hosp_occupancy_labelled %>%\n  ggplot(aes(x=date,y=count, colour=event)) +\n  geom_line(size=1) +\n  geom_text_repel(aes(x=date,y=count,label=event,colour=event),\n                  nudge_x=75,\n                  direction=\"y\",hjust=\"left\",\n                  data = arrange(lt_hosp_occupancy_labelled,event,date)%>%\n                    group_by(event)%>%\n                    summarise(across(everything(), last))) +\n  ft_theme() +\n  scale_color_ft(\"teal\") +\n    #scale_colour_viridis_d() +\n  theme(legend.position = \"none\") +\n    labs(title=\"Lithuania - Hospital bed occupancy\",\n       subtitle=\"7 day means\",\n       y=\"Beds\",\n       x=\"Date\",\n       caption=caption_text\n         ) +\n   scale_x_date(limits = c(ymd(\"2020-12-01\",NA)),expand = expansion(add = c(0,100))) \n\n\n\n\nData source\nThese charts are drawn using data published by the Official Statistics Portal (OSP) on their COVID-19 open data site.\nThe R markdown source is available as a github repo.\nDataset description (google translation)\ngoogle translation of original Lithuanian2\n7-day averages for available and occupied inpatient beds, oxygen-supplied beds, beds in intensive care and resuscitation wards, artificial lung ventilation equipment and its use, ECMO systems and their occupancy, patient flow, and amounts of Remdesivir.\nData is updated in the morning at 10:00.\nDescription of information provided:\nfield\ndescription\ndate\nreporting day (end date of the reporting period 16: 00-16: 00)\nhospital_name\nthe name of the hospital\nhealthcare_region\nregion (five territorial health insurance funds)\nhospital_beds_total_r7mean\ntotal number of inpatient hospital beds (without RITS!)\nhospital_beds_occupied_r7mean\nnumber of inpatient hospital beds (without RITS!)\noxygen_beds_total_r7mean\nall beds with oxygen supply (part of hospital_beds_total)\noxygen_beds_occupied_r7mean\noccupied beds with oxygen supply\nmv_beds_total_r7mean\nall beds with artificial lung ventilation (DPV) (part of hospital_beds_total)\nmv_beds_occupied_r7mean\nbusy beds with DPV options\nicu_beds_total_r7mean\nresuscitation and intensive care (RITS) beds (not part of hospital_beds_total!)\nicu_beds_occupied_r7mean\nbusy RITS beds (not part of hospital_beds_occupied!)\nicu_ecmo_systems_total_r7mean\ntotal number of RITS beds with ECMO systems\nicu_ecmo_systems_in_use_r7mean\nnumber of occupied RITS beds with ECMO systems\ncv19_hospital_beds_assigned_r7mean\nNumber of beds for COVID patients\ncv19_hospital_beds_occupied_r7mean\nnumber of occupied COVID beds\ncv19_oxygen_beds_assigned_r7mean\nCOVID oxygen beds for patients\ncv19_oxygen_beds_occupied_r7mean\noccupied oxygen beds for COVID patients\ncv19_mv_beds_assigned_r7mean\nCOVID Patient Beds with Artificial Lung Ventilation (DPV)\ncv19_mv_beds_occupied_r7mean\noccupied COVID patient beds with DPV capabilities\ncv19_icu_beds_assigned_r7mean\nCOVID Patient Resuscitation and Intensive Care (RITS) Beds\ncv19_icu_beds_occupied_r7mean\nbusy RITS beds for COVID patients\ncv19_icu_mv_beds_assigned_r7mean\nCOVID Patient RITS Beds with Artificial Lung Ventilation (DPV)\ncv19_icu_mv_beds_occupied_r7mean\noccupied RITS beds for COVID patients with DPV capability\ncv19_icu_highflow_systems_total_r7mean\nCOITS for RV beds with high-flow system\ncv19_icu_highflow_systems_in_use_r7mean\nbusy COITS RITS beds with high-flow system\ncv19_icu_ecmo_assigned_r7mean\nRITS beds for COVID patients with EKMO system\ncv19_icu_ecmo_in_use_r7mean\nbusy RITS beds for COVID patients with EKMO system\ncv19_admissions_r7mean\nnew COVID patients (daily)\ncv19_admissions_oxygen_r7mean\nnew COVID patients receiving oxygen\ncv19_admissions_mv_r7mean\nnew COVID patients with artificial lung ventilation\ncv19_discharges_r7mean\nCOVID patient checkouts / departures\nremdesivir_vials_used_r7mean\nused Remdesivir vials\nremdesivir_patients_total_r7mean\nNumber of patients receiving Remdesivir\nremdesivir_patients_new_r7mean\nNumber of new patients receiving Remdesivir\n\nLithuania publishes mortality data according to three different levels of attribution to COVID. The most restrictive is used here.↩︎\nhttps://open-data-ls-osp-sdg.hub.arcgis.com/datasets/f8f5c84b20e24ff99be4dd472d377640_0/about↩︎\n",
      "last_modified": "2022-05-10T10:42:29+00:00"
    },
    {
      "path": "index.html",
      "title": "Lithuanian COVID-19 calculations",
      "description": "Regularly updated graphs and calculations of Lithuanian COVID-19 data\n",
      "author": [],
      "date": "2021-11-19",
      "contents": "\nLithuanian COVID calculations\nThis website uses RMarkdown files to automatically generate graphs which present for Lithuania:\nCase and death incidence for COVID-19 for national age cohorts\nHospitalisation comparison in the Omicron wave\nComparative incidence by vaccination status and vaccine effectiveness\nArchived comparative incidence by vaccination status and vaccine effectiveness for 2021\n\n\n\n",
      "last_modified": "2022-05-10T10:42:29+00:00"
    },
    {
      "path": "ongoing-breakthrough-calculations.html",
      "title": "Vaccination status and incidence, vaccine effectiveness ",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nData source\nComparing vaccine effectiveness to vaccine ageCalculations for vaccine effectiveness after a single dose\n\nComparison with vaccine-specific UK resultsLithuanian data and approximations\nComparison with UK data\nComments on the comparison\n\nCalculations excluding under-20s\nDataset description (English translation)\nDataset description (Lithuanian original)\n\nLithuania’s Official Statistics Portal (OSP) issues a lot of data which indicates transitions (“events”) for individuals on each day, aggregated by municipality (Lithuania has 60), gender and age cohort. I aggregate these figures further to generate national data to look at how COVID-19 is now affecting vaccinated and unvaccinated individuals.\nThe dataset only considers first infections - individuals who are infected more than once are not counted again. With more reinfections, these data now diverge from the national data considerably.\nAll this comes with the caveats that I am working from OSP data but these are my calculations and there may be errors. I am not an epidemiologist. Straightforward presentation of case numbers have not seen much adjustment.\nFurther calculations (towards estimated vaccine effectiveness) may have error, including in calculations of the unvaccinated population, which influences the estimate of the proportional incidence in the unvaccinated population and thus the relative incidence in vaccinated populations.\nDelta has been the dominant strain of SARS-CoV2 in Lithuania since July 2021 and so some of the inflection at that point may be better attributed to the shift of the prevalent strain rather than the base aging of the vaccinations.\nData source\nThese charts are drawn using data published by the Official Statistics Portal (OSP) on their COVID-19 open data site, along with the annual population counts for Lithuanian municipalities, also published by the OSP.\n\nShow code\nlibrary(vroom)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(ggplot2)\nlibrary(spatstat)\nlibrary(zoo)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(ggrepel)\n\n# Set-up output ----\n\nknitr::opts_chunk$set(\n  echo = FALSE,\n  message = FALSE,\n  warning = FALSE\n)\n\ntheme_set(\n  theme_minimal() +\n    theme(legend.position = \"bottom\")\n  )\n\n\n# set random seed \n# this is so that re-running the graph generation on a regular basis (as we do) when\n# the data doesn't change (e.g. twice in the same day) doesn't generate changed\n# graphs (due to the jitter used)\nset.seed(6381045)\n\n# dataset source: ----\n\n# This is the source for the vaccination status transition table\n# https://open-data-ls-osp-sdg.hub.arcgis.com/datasets/1fd352a1c4534afe8ff87c564c0724c0_0/about\n\n# This is the url for the aggregate case numbers (including re-infections)\n# https://services3.arcgis.com/MF53hRPmwfLccHCj/arcgis/rest/services/Agreguoti_COVID19_atvejai_ir_mirtys/FeatureServer/0/query?where=1%3D1&outFields=date,new_cases&outSR=4326&f=json\n\n\n# dataset description: ----\n\n# Download functions ----\ndownload_restful <- function (api_call = \"\",\n                              data_filter = function(x) { return(x) }) {\n  if(str_length(api_call) == 0) {\n    message(\"Empty api_call\")\n    return(NULL)\n  }\n  get_data <- GET(api_call)\n\n  get_content <- content(get_data, \"text\")\n\n  get_json <- fromJSON(get_content, flatten = TRUE)\n\n  get_df <- as.data.frame(get_json$features)\n\n  result_offset <- dim(get_df)\n  result_offset <- result_offset[1]\n\n  get_df <- data_filter(get_df)\n\n  page <- 1\n  done_download <- FALSE\n  supp_data <- get_data\n\n  rm(\"get_data\", \"get_content\", \"get_json\")\n\n  while (!done_download && supp_data$status_code == 200) {\n    offset <- result_offset * page\n    page <- page + 1\n    supp_api_call <-\n      paste(api_call, \"&resultOffset=\", sprintf(\"%d\", offset), sep = \"\")\n    supp_data <- GET(supp_api_call)\n    message( \".\", appendLF = FALSE)\n\n    supp_content <- content(supp_data, \"text\")\n    supp_json <- fromJSON(supp_content, flatten = TRUE)\n    supp_df <- as.data.frame(supp_json$features) %>%\n      data_filter()\n    row_count <- dim(supp_json$features)\n    row_count <- row_count[1]\n\n    if (!hasName(supp_json, \"exceededTransferLimit\")) {\n      message(\n        \"\\nDownload complete\"\n      )\n      done_download <- TRUE\n    }\n    if (supp_data$status_code == 200) {\n      get_df <- rbind(get_df, supp_df)\n    } else {\n      message(\"\\nDownload finished with unexpected status code\",\n              supp_data$status_code\n      )\n      break\n    }\n  }\n  return(get_df)\n}\n\n#' Download Excel Documents\n#' Taken from covidregionaldata library\n#'\n#' @param url Character string containing the full URL to the Excel document.\n#' @param archive Character string naming the file name to assign in the\n#' temporary directory.\n#' @param transpose Logical, should the read in data be transposed\n#' @param ... Additional parameters to pass to `read_excel()`.\n#' @inheritParams message_verbose\n#' @importFrom readxl read_excel\n#' @return A `data.frame`.\ndownload_excel <- function(url, archive, verbose = FALSE,\n                           transpose = TRUE, ...) {\n  # download\n  archive <- file.path(tempdir(), archive)\n  download.file(\n    url = url,\n    destfile = archive,\n    mode = \"wb\", quiet = !(verbose)\n  )\n  # read in\n  dt <- suppressMessages(\n    read_excel(archive, ...)\n  )\n\n  if (transpose) {\n    dt <- t(dt)\n  }\n  dt <- as.data.frame(dt)\n  return(dt)\n}\n\n# Download the data ----\n\nif (params$download_data) {\n  lt_vacc_eff_data <- download_restful(\n    api_call = \"https://services3.arcgis.com/MF53hRPmwfLccHCj/arcgis/rest/services/COVID_u%C5%BEsikr%C4%97timai_tarp_vakcinuot%C5%B3_ir_nevakcinuot%C5%B3/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\" # nolint\n  ) %>%\n    rename_with(~ gsub(\"attributes.\",\"\", .x)) %>%\n    mutate(date = as_date(as_datetime(date / 1000)))\n\n\n  # Download the at risk data table for the beginning of 2021\n  #\n  # https://ls-osp-sdg.maps.arcgis.com/sharing/rest/content/items/12822ba507864e119d713d14c1971e78/data\n\n  initial_state <- download_excel(\n    \"https://ls-osp-sdg.maps.arcgis.com/sharing/rest/content/items/12822ba507864e119d713d14c1971e78/data\",\n    sheet = \"initial_states_20210101\",\n    archive = \"initial_states\",\n    transpose = FALSE)\n  \n  # Download the top-level case data\n  \n  # https://services3.arcgis.com/MF53hRPmwfLccHCj/arcgis/rest/services/Agreguoti_COVID19_atvejai_ir_mirtys/FeatureServer/0/query?where=1%3D1&outFields=date,new_cases,age_gr&outSR=4326&f=json\n  \n    lt_case_data <- download_restful(\n    api_call = \"https://services3.arcgis.com/MF53hRPmwfLccHCj/arcgis/rest/services/Agreguoti_COVID19_atvejai_ir_mirtys/FeatureServer/0/query?where=1%3D1&outFields=date,new_cases,age_gr,sex&outSR=4326&f=json\" # nolint\n  ) %>%\n    rename_with(~ gsub(\"attributes.\",\"\", .x)) %>%\n      mutate(date=as_date(date)) %>%\n      group_by(date, age_gr, sex) %>%\n      summarise(new_cases=sum(new_cases), .groups = \"drop\") %>%\n      mutate(sex = case_when(\n        sex == \"Moteris\" ~ \"M\",\n        sex == \"Vyras\" ~ \"V\"\n      )) %>%\n      mutate(cohort = case_when(\n        age_gr == \"0-9\"   ~ \"0-19\",\n        age_gr == \"10-19\"   ~ \"0-19\",\n        age_gr == \"80-89\" ~ \"80+\",\n        age_gr == \"90-99\" ~ \"80+\",\n        age_gr == \"Centenarianai\" ~ \"80+\",\n        age_gr == \"Nenustatyta\" ~ NA_character_,\n        TRUE ~ age_gr\n      )) %>%\n#  filter(!is.na(cohort)) %>%\n      select(-age_gr) %>%\n      group_by(date, sex, cohort) %>%\n      summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE)),\n                .groups = \"drop\") %>%\n      rename(age_gr = cohort)\n      \n  save(lt_vacc_eff_data, lt_case_data, initial_state,\n       file = \"input_data_ongoing.Rds\")\n} else {\n  load(\"input_data_ongoing.Rds\")\n}\n\n# Data manipulation ----\n\nlt_natl_ve_data <- tibble(lt_vacc_eff_data) %>%\n  left_join(initial_state, by=c(\"municipality\",\"sex\",\"age_gr\")) %>%\n  #select(-object_id) %>%\n  group_by(date, sex, age_gr) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE)),\n            r0_init = sum(at_risk),\n            .groups = \"drop\") \n  # mutate(tallied=r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3) %>%\n  # full_join(lt_case_data %>%\n  #             filter(date >= ymd(\"2021-01-01\")) %>%\n  #             mutate(sex = if_else(sex==\"Cenzūruota\", NA_character_, sex)),\n  #           by=c(\"date\",\"sex\",\"age_gr\")) %>%\n  # mutate(difference = tallied - new_cases)\n\n# lt_natl_ve_data_adults <- tibble(lt_vacc_eff_data) %>%\n#   left_join(initial_state, by=c(\"municipality\",\"sex\",\"age_gr\")) %>%\n#   #select(-object_id) %>%\n#   filter(age_gr != \"0-19\") %>%\n#   group_by(date, sex, age_gr) %>%\n#   summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE)), r0_init = sum(at_risk)) %>%\n#   ungroup() %>%\n#   left_join(lt_case_data, by=c(\"date\",\"sex\",\"age_gr\"))\nlt_natl_ve_data_adults <-  lt_natl_ve_data %>% filter(age_gr != \"0-19\")\n \nr0_init_cohorts <- tibble(initial_state) %>%\n  group_by(sex, age_gr) %>%\n  summarise(r0 = sum(at_risk))\n\nr0_init_national <- sum(initial_state$at_risk)\nr0_init_adults_national <- sum(initial_state %>%\n                          filter(age_gr != \"0-19\") %>%\n                        pull(at_risk))\n\ncalculate_ve <-\n  function(.data) {\n    #browser()\n    if (dplyr::is_grouped_df(.data)) {\n      return(dplyr::do(.data, calculate_ve(.)))\n    }\n    #message(str(.data))\n  # calculate populations in each category\n    mutate(.data,\n           unvaxxed  = (r0i0+r0i1) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n           partially = (r1i1+r1i2) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n           fully     = (r2i2+r2i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n           boosted   = (r3i3)      / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3)\n    ) %>%\n      arrange(date) %>%\n  mutate(\n    censored = r0c0+r0c1+r1c1+r1c2+r2c2+r2c3+r3c3, # per day\n    infected = r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3, # per day\n    r_pop_r0 = r0_init - cumsum(r0r1+r0c0+r0c1+r0i0+r0i1),\n    r_pop_r1 = cumsum(r0r1-r1r2-r1i1-r1c1-r1i2-r1c2),\n    r_pop_r2 = cumsum(r1r2-r2r3-r2i2-r2c2-r2i3-r2c3),\n    r_pop_r3 = cumsum(r2r3-r3c3-r3i3)\n  ) %>%\n  # fractions of each population infected\n  mutate(\n    i_frac_r0 = (r0i0+r0i1) / r_pop_r0,\n    i_frac_r1 = if_else(r_pop_r1 > 0, (r1i1+r1i2) / r_pop_r1, NA_real_),\n    i_frac_r2 = if_else(r_pop_r2 >0, (r2i2+r2i3) / r_pop_r2, NA_real_),\n    i_frac_r3 = if_else(r_pop_r3 >0,(r3i3) / r_pop_r3, NA_real_)\n  ) %>%\n  mutate(\n    ve_vs_r0_r1 =  (i_frac_r0 - i_frac_r1)/i_frac_r0,\n    ve_vs_r0_r2 = (i_frac_r0 - i_frac_r2)/i_frac_r0,\n    ve_vs_r0_r3 = if_else(r_pop_r3 != 0,(i_frac_r0 - i_frac_r3)/i_frac_r0, NA_real_)\n  )\n}\n\ninf_comp_wide <- calculate_ve(\n  lt_natl_ve_data %>%\n    #filter(date < \"2021-01-15\") %>%\n    group_by(date) %>%\n    summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE)),\n              .groups = \"drop\") %>%\n    mutate(r0_init = r0_init_national))\n\ninf_comp_wide_adults <- calculate_ve(\n  lt_natl_ve_data %>%\n    filter(age_gr != \"0-19\") %>%\n    group_by(date) %>%\n    summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE)),\n              .groups = \"drop\") %>%\n    mutate(r0_init = r0_init_national))\n\ninf_comp_cohort_wide <- calculate_ve(\n  lt_natl_ve_data %>%\n    #mutate(month = month(date)) %>%\n    group_by(date, age_gr, sex) %>%\n    summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE)),\n              .groups = \"drop\") %>%\n    mutate(partially = (r1i1+r1i2) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n           fully = (r2i2+r2i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n           boosted = r3i3 / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3)) %>%\n    left_join(r0_init_cohorts, by=c(\"sex\", \"age_gr\")) %>%\n    rename(r0_init = r0)\n)\n\n# infection_comparisons_wide <- lt_natl_ve_data %>% #filter(date < \"2021-01-15\") %>%\n#   group_by(date) %>%\n#   summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE)),\n#             r0_init=sum(r0_init),\n#             .groups = \"drop\") %>%\n  \n\n# infection_comparisons_wide_adults <- lt_natl_ve_data_adults %>%\n#   group_by(date) %>%\n#   summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE))) %>%\n#   mutate(partially = (r1i1+r1i2) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n#          fully = (r2i2+r2i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n#          boosted = (r3i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3)) %>%\n#   ungroup() %>%\n#   # calculate populations in each category\n#   mutate(\n#     censored = r0c0+r0c1+r1c1+r1c2+r2c2+r2c3+r3c3, # per day\n#     infected = r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3, # per day\n#     #r_pop = r0_init_adults - cumsum(r0r1+r0c0+r0c1+r0i0+r0i1),\n#     r_pop_r0 = r0_init_adults - cumsum(r0r1+r0c0+r0c1+r0i0+r0i1),\n#     r_pop_r1 = cumsum(r0r1-r1r2-r1i1-r1c1-r1i2-r1c2),\n#     r_pop_r2 = cumsum(r1r2-r2r3-r2i2-r2c2-r2i3-r2c3),\n#     r_pop_r3 = cumsum(r2r3-r3c3-r3i3)) %>%\n#   # fractions of each population infected\n#   mutate(\n#     i_frac_r0 = (r0i0+r0i1) / r_pop_r0,\n#     i_frac_r1 = (r1i1+r1i2) / r_pop_r1,\n#     i_frac_r2 = (r2i2+r2i3) / r_pop_r2,\n#     i_frac_r3 = (r3i3) / r_pop_r3\n#   ) %>%\n#   mutate(\n#     ve_vs_r0_r1 =  (i_frac_r0 - i_frac_r1)/i_frac_r0,\n#     ve_vs_r0_r2 = (i_frac_r0 - i_frac_r2)/i_frac_r0,\n#     ve_vs_r0_r3 = if_else(r_pop_r3 != 0,(i_frac_r0 - i_frac_r3)/i_frac_r0, NA_real_)\n#   )\n\n# Calculate median vaccination dates ----\n\nmedian_date <- function(data, cols=c(date=\"date\", sums=\"sums\")) {\n  sorted_data <- data %>% select(cols) %>%\n    arrange(cols[\"date\"])\n  medians <- rep_len(NA_Date_, length(data[[cols[\"date\"]]]))\n  last_median_idx <- 1\n  for (i in 1:length(data[[cols[\"date\"]]])) {\n    if (data[[cols[\"sums\"]]][i]>0) {\n      if (last_median_idx == 1) {\n        last_median_idx <- i\n        medians[i] <- data[[cols[\"date\"]]][last_median_idx]\n      } else {\n        if (data[[cols[\"sums\"]]][i] / 2 > data[[cols[\"sums\"]]][last_median_idx] ) {\n          j <- min(last_median_idx+1,i)\n          while (data[[cols[\"sums\"]]][i] / 2 > data[[cols[\"sums\"]]][j]) {\n            j <- j + 1\n          }\n          last_median_idx <- j - 1\n        }\n        medians[i] <- data[[cols[\"date\"]]][last_median_idx]\n      }\n    }\n  }\n  return(as_date(medians))\n}\n\nnarrowed_comps <- inf_comp_wide %>%\n  mutate(fully_vxd_14d = r1r2) %>%\n  select(date, fully_vxd_14d) %>%\n  mutate(fully_vxd_14d_tot = cumsum(fully_vxd_14d))\n\nmedian_age_calcs <- inf_comp_wide %>%\n  mutate(med_date = median_date(data = narrowed_comps,\n                                cols=c(date=\"date\", sums=\"fully_vxd_14d_tot\"))) %>%\n  mutate(med_vxd_age\n         = if_else(is.na(med_date),\n                   NA_integer_,\n                   # individuals are only counted into r1r2\n                   # once they are 14 days beyond second dose\n                   as.integer(date) - as.integer(med_date)+14L))\n\nmean_age_values <- tibble(lt_vacc_eff_data) %>%\n  select(date, r1i1_mdsv, r2i2_mdsv, r1i1_john, r2i2_john) %>%\n  unique()\n\n# Join median and mean ages and apply a delta measure ----\n\ninfection_ages <- left_join(inf_comp_wide, mean_age_values,\n                            by=c(\"date\")) %>%\n  left_join(median_age_calcs %>%select(date, med_vxd_age), by=c(\"date\")) %>%\n  mutate(dominant_variant = \n           case_when(\n             date < ymd(\"2021-05-20\")                           ~  \"alpha\",\n             date > ymd(\"2021-07-15\") & date < ymd(\"2021-12-15\") ~ \"delta\",\n             date > ymd(\"2022-01-15\")                            ~ \"omicron\"\n                          )\n  )\n\ninfection_comparisons <- inf_comp_wide %>%\n  pivot_longer(\n    cols = !c(\"date\"),\n    values_to = \"count\",\n    names_to = \"event\")\n\ninfection_comparisons_adults <- inf_comp_wide_adults %>%\n  pivot_longer(\n    cols = !c(\"date\"),\n    values_to = \"count\",\n    names_to = \"event\")\n\n\n\nFirst consider the daily number of new cases from each population: those who are unvaccinated or within 14 days of their first vaccination dose; those who are between doses; and those who have had both doses of a two dose vaccination regime.\nSince September the number of “breakthrough” cases in fully-vaccinated individuals has grown significantly and is now close to the figure for unvaccinated individuals.\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"r0i0\", \"r0i1\", \"r1i1\", \"r1i2\", \"r2i2\", \"r2i3\", \"r3i3\")) %>%\n  filter(date > ymd(\"2021-01-7\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Individual\\nvaccination\\nstatus\",\n                         breaks = c(\"r0i0\", \"r0i1\", \"r1i1\", \"r1i2\", \"r2i2\", \"r2i3\", \"r3i3\"),\n                         labels = c(\"Unvaccinated or\\nless than 14d\\nafter 1st dose\",\n                                    \"14d after\\n1st dose\",\n                                    \"14+d after\\n1st dose\",\n                                    \"14d after\\n2nd dose\",\n                                    \"14+d after\\n2nd dose\",\n                                    \"14d after\\n3rd dose\",\n                                    \"14+d after\\n3rd dose\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day rolling average - first infections only\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nLooking at the contribution to the number of cases, these cases in fully-vaccinated individuals have increased fairly steadily since July. The number of cases in partially-vaccinated individuals staying fairly constant reflects that this population is staying fairly stable with steady turnover as people complete their two dose vaccination regime.\nThe number of cases recorded in this dataset does not reflect re-infections.\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"unvaxxed\", \"partially\", \"fully\", \"boosted\", \"other\")) %>%\n  #filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, fill=event)) +\n  theme_minimal() +\n  geom_area(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_fill_viridis_d(name = \"Vaccination status\",\n                         breaks = c(\"unvaxxed\", \"partially\", \"fully\", \"boosted\", \"other\"),\n                         labels = c(\"Unvaccinated\", \"Partially\", \"Fully\", \"Boosted\", \"Other\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous( labels = scales::percent,\n                      sec.axis = sec_axis(~ ., labels = scales::percent)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day rolling average as fraction of total first infections\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nNormalised by the number of people with each vaccination status, incidence peaked for unvaccinated individuals at over 1.5 in late October. The figures for fully- and partially-vaccinated individuals increased slowly since July and peaked a little later. There are some cases among individuals who have had a third booster shot.\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\")*1000 ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\"),\n                         labels = c(\"Unvaccinated\",\n                                    \"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day average new infections per 1000 population with that status\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nVaccine effectiveness is calculated by considering the relative incidence among each population compared with the unvaccinated population. This has shown fairly steady decline in fully-vaccinated individuals since July and is now below 35%.\nThis fading vaccination across the whole population of fully-vaccinated individuals reflects that these vaccinations are aging. Lithuania started vaccinating individuals in early winter 2021. The median “age” of second dose vaccination is over 150 days (on 20 November).\n\nShow code\nmed_age_plot <- median_age_calcs %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=med_vxd_age)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  scale_x_date() +\n  scale_y_continuous(\n    sec.axis = sec_axis(~ .,\n                        breaks = seq(from = 0, to = 240, by = 30),),\n    limits = c(0,NA),\n    breaks = seq(from = 0, to = 240, by = 30),\n    oob = scales::oob_censor)  +\n  labs(x=\"Date\", y=\"Median days\\nsince 2nd dose\")\n\ninf_eff_plot <- infection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  filter(pc_cases_7d_mean<1) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\"),\n                         labels = c(\"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(\n    sec.axis = sec_axis(\n      ~ .,\n      breaks = seq(from = 0, to = 1, by = 0.1),\n      labels = label_percent(accuracy=1)),\n    limits = c(0,1),\n    breaks = seq(from = 0, to = 1, by = 0.1),\n    #limits = c(0,15),\n    labels = label_percent(accuracy=1),\n    oob = scales::oob_censor) +\n  labs(\n       y=\"Effectiveness\",\n       y=\"Date\"\n) +\n  scale_x_date()\n\ninf_eff_plot / med_age_plot + plot_layout(heights = c(2,1)) +\n  plot_annotation(\n    title=\"Lithuania - COVID-19 vaccine effectiveness fades beyond 4 months\",\n       subtitle=\"Calculated on 7 day averages, compared with median days since 2nd dose\",\n    caption=\"Richard Martin-Nielsen\\nData: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_14d_mean = zoo::rollmean(count,k=14, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  filter(pc_cases_14d_mean<1) %>%\n  ggplot(aes(x = date, y=pc_cases_14d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\"),\n                         labels = c(\"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(\n    sec.axis = sec_axis(\n      ~ .,\n      breaks = seq(from = 0, to = 1, by = 0.1),\n      labels = scales::percent),\n    limits = c(0,1),\n    breaks = seq(from = 0, to = 1, by = 0.1),\n    #limits = c(0,15),\n    labels = scales::percent,\n    oob = scales::oob_censor) +\n  labs(title=\"Lithuania - COVID-19 vaccine effectiveness by vaccination status\",\n       subtitle=\"14 day mean, only considering first infections\",\n       y=\"Vaccine effectiveness\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nComparing vaccine effectiveness to vaccine age\nOSP provides for each data, the average ages of vaccinations among those who are infected after two doses (r1i1_mdsv and r2i2_mdsv), and I also have a rough calculation of the median age of a double vaccination. (This calculation does not account for removing people who are infected or “censored” from the population, nor for those who have booster shots, so becomes less useful after November when boosters become more common.)\nBoth the charts using the vaccine effectiveness after a single shot show the noisiness of this data - including some values below zero.\nBased on the graph given in an OSP analysis of vaccine effectiveness for a specific cohort1 I estimate that Delta was less than 10% of infections until 20 May 2021 and more than 90% of infections after 15 July 2021. Measurements for this date range will be excluded.\n\nShow code\ninfection_ages %>%\n  filter(r2i2_mdsv>0, !is.na(dominant_variant)) %>%\n  mutate(med_vxd_age = med_vxd_age / 7) %>%\n  ggplot(aes(colour=date,y=ve_vs_r0_r2,x=med_vxd_age,group=dominant_variant)) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_color_date(name=\"Date\") +\n  geom_smooth() +\n    labs(\n      title=\"Lithuania - COVID-19 fading vaccine effectiveness\",\n      subtitle = \"Compared with median number of weeks since second dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Weeks since second dose (total population)\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\nBreaking the data according to a split of Alpha-dominant time period and Delta-dominant periods we see separate trends for the two periods.\n\nShow code\ninfection_ages %>%\n  filter(r2i2_mdsv>0, !is.na(dominant_variant)) %>%\n  mutate( r2i2_mdsv = r2i2_mdsv / 7 ) %>%\n  ggplot(aes(colour=date,y=ve_vs_r0_r2,x=r2i2_mdsv, group=dominant_variant)) +\n  geom_point() +\n  annotate(\"text\", x=3,y=0.6,label=\"Alpha-dominant\") +\n  annotate(\"text\", x=20,y=0.8,label=\"Delta-dominant\") +\n  #annotate(\"text\", x=4.5,y=0.25,label=\"Lithuanian data\") +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_color_date(name=\"Date\") +\n  geom_smooth() +\n      labs(\n      title=\"Lithuania - COVID-19 fading vaccine effectiveness\",\n      subtitle = \"Compared with average number of weeks since second dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Average weeks since second dose for confirmed cases\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\nCalculations for vaccine effectiveness after a single dose\nThese are problematic, with some figures showing negative vaccine effectiveness. I think this is a small numbers problem where the number of cases recorded each day is quite low and so the uncertainty of when cases “should” be recorded may result in very noisy data. I plan to aggregate these figures by date of report to see if some of these problems may be resolved.\n\nShow code\ninfection_ages %>%\n  filter(r1i1_john>0) %>%\n  mutate(r1i1_john = r1i1_john / 100) %>%\n  ggplot(aes(colour=date,y=ve_vs_r0_r1,x=r1i1_john)) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_x_continuous(labels = scales::percent_format()) +\n  scale_color_date(name=\"Date\") +\n  geom_smooth() +\n      labs(\n      title=\"Lithuania - COVID-19 vaccine effectiveness\",\n      subtitle = \"Janssen vaccinations among those infected after one dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Percentage of Janssen vaccinations\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\n\nShow code\ninfection_ages %>%\n  filter(r1i1_mdsv>7) %>%\n  mutate( r1i1_mdsv = r1i1_mdsv / 7 ) %>%\n  ggplot(aes(colour=r1i1_john,y=ve_vs_r0_r1,x=r1i1_mdsv)) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_x_continuous() +\n  scale_color_continuous(name = \"Percent Janssen vaccinations among infected\") +\n  geom_smooth() +\n      labs(\n      title=\"Lithuania - COVID-19 fading vaccine effectiveness\",\n      subtitle = \"Compared with time since first dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Mean weeks since first dose\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\nComparison with vaccine-specific UK results\nA UK preprint2 analyses vaccine effectiveness in the UK for three vaccines against symptomatic disease, hospitalisation and death.\nThe UK study’s approach cannot be replicated with the available open data for Lithuania, but the overall results for vaccine effectiveness in protection from disease may be compared, with some limitations based on the differing data available.\nLithuanian data and approximations\nFor each day, Lithuania provides the mean days since vaccination for all those fall ill more than 14 days after having had two doses of vaccine.3 This value varies compared with the median number of days since vaccination for the entire vaccinated population, which can also be calculated from available open data. This is used to assign all of the cases for a particular day into one of the groups, approximating all the cases by their mean.\nLithuania does not release data differentiating between cases in people vaccinated with one vaccine or another. There is a temporal trend (individuals vaccinated earlier are more likely to be vaccinated with Vaxzevria than Comirnaty) and there are specific occupation-related and age-related biases, but there is no way to usefully “guess” the vaccine make-up among cases of any particular day.\nLithuania does provide age disaggregated data so it would be possible to make comparisons based on age cohorts but the mean days since vaccination figure is not disaggregated, meaning that the mean value may mask significant variance among age groups.\n\nShow code\ninfn_age_bins <- infection_ages %>%\n  mutate(\n    r2i2_mdsv_weeks = r2i2_mdsv / 7,\n    med_vxd_age_weeks = med_vxd_age / 7,\n    mdsv_age_bin =\n      case_when(\n        r2i2_mdsv_weeks <= 1 ~ \"week 1\",\n        r2i2_mdsv_weeks <= 9 ~ \"2-9 weeks\",\n        r2i2_mdsv_weeks <= 14 ~ \"10-14 weeks\",\n        r2i2_mdsv_weeks <= 19 ~ \"15-19 weeks\",\n        TRUE ~ \"20+ weeks\"\n      ),\n    md_vxd_age_bin =\n      case_when(\n        med_vxd_age_weeks <= 1 ~ \"week 1\",\n        med_vxd_age_weeks <= 9 ~ \"2-9 weeks\",\n        med_vxd_age_weeks <= 14 ~ \"10-14 weeks\",\n        med_vxd_age_weeks <= 19 ~ \"15-19 weeks\",\n        TRUE ~ \"20+ weeks\"\n      )\n    ) %>%\n  mutate(\n    md_vxd_age_bin =\n      factor(if_else(is.na(med_vxd_age), NA_character_, md_vxd_age_bin),\n             c(\"week 1\",  \"2-9 weeks\", \"10-14 weeks\", \"15-19 weeks\", \"20+ weeks\"),\n             ordered=TRUE),\n         mdsv_age_bin = factor(if_else(is.na(r2i2_mdsv), NA_character_, mdsv_age_bin),\n             c(\"week 1\",  \"2-9 weeks\", \"10-14 weeks\", \"15-19 weeks\", \"20+ weeks\"),\n             ordered=TRUE)\n         )\n\nbinned_ve_calcs_r2 <- infn_age_bins %>%\n  filter(!is.na(dominant_variant), !is.na(mdsv_age_bin)) %>%\n  group_by(dominant_variant,mdsv_age_bin) %>%\n  summarise(mean(ve_vs_r0_r2*100), sd(ve_vs_r0_r2*100), sd(r_pop_r0)) %>%\n  mutate(`Dominant strain` = str_to_title(dominant_variant), .before=dominant_variant) %>%\n  rename(`Mean weeks since vaccination`=mdsv_age_bin,\n         `Vaccine effectiveness [%]`=`mean(ve_vs_r0_r2 * 100)`,\n         `Standard deviation [%]`=`sd(ve_vs_r0_r2 * 100)`,\n         `Susceptible population standard deviation`=`sd(r_pop_r0)`) %>%\n  ungroup() %>%\n  select(-`dominant_variant`)\n\nquibble <- function(x, q = c(0.05, 0.5, 0.95)) {\n  tibble(x = quantile(x, q), q = q)\n}\npercentile_ve_calcs_r2 <- infn_age_bins %>%\n  filter(!is.na(dominant_variant), !is.na(mdsv_age_bin)) %>%\n  group_by(dominant_variant,mdsv_age_bin) %>%\n  summarise(quibble(ve_vs_r0_r2)) %>%\n  pivot_wider(id_cols=c(dominant_variant, mdsv_age_bin), values_from = c(x), names_from = c(q), names_prefix = \"ci_\")\npretty_percentiles <- percentile_ve_calcs_r2 %>%\n  ungroup() %>%\n  transmute(`Dominant strain` = str_to_title(dominant_variant),\n         `Mean weeks since vaccination`=mdsv_age_bin,\n         `Vaccine effectiveness [%]`=sprintf(\"%.1f (%.1f to %.1f)\", `ci_0.5`*100, `ci_0.05`*100, `ci_0.95`*100))\n  \n# infn_age_bins %>% group_by(mdsv_age_bin, delta) %>%\n#   count()\n\n# library(boot)\n# mean_ve <- function(formula, data, indices) {\n#   d <- data[indices,] # allows boot to select sample\n#   return(mean( d))\n#   #return(summary(fit)$r.square)\n# }\n# m_ve <- function(d,w) mean(d$ve_vs_r0_r2)\n# boot_ve <- boot(data=select(infn_age_bins, date, ve_vs_r0_r2,delta, r2i2_mdsv)%>%filter(r2i2_mdsv > 20,delta, !is.na(ve_vs_r0_r2)), statistic=m_ve, R=1000)\n# boot.ci(boot_ve)\n\n#knitr::kable(binned_ve_calcs_r2, digits = 2)\nknitr::kable(pretty_percentiles)\n\n\nDominant strain\nMean weeks since vaccination\nVaccine effectiveness [%]\nAlpha\nweek 1\n78.0 (69.4 to 91.0)\nAlpha\n2-9 weeks\n87.3 (64.0 to 93.7)\nAlpha\n10-14 weeks\n89.3 (86.3 to 94.3)\nDelta\n2-9 weeks\n83.6 (75.6 to 93.2)\nDelta\n10-14 weeks\n76.5 (72.3 to 81.6)\nDelta\n15-19 weeks\n72.4 (68.9 to 75.5)\nDelta\n20+ weeks\n61.4 (54.1 to 67.0)\nOmicron\n20+ weeks\n19.2 (-1.2 to 39.6)\n\nThe different trends for the two periods with Alpha- and Delta-dominance are also visible.\n\nShow code\ninfn_age_bins %>%\n  filter(!is.na(dominant_variant), !is.na(mdsv_age_bin)) %>%\n  mutate(dominant_variant = str_to_title(dominant_variant)) %>%\n  ggplot(aes(x=mdsv_age_bin, y=ve_vs_r0_r2)) +\n  scale_y_continuous(limits=c(0,1),labels = scales::percent) +\n  geom_boxplot() +\n  geom_jitter(alpha=0.5) +\n  facet_grid(cols=vars(dominant_variant)) +\n    theme(plot.caption=element_text(size = rel(0.8)),\n          plot.title=element_text(size = rel(1.2)),\n          axis.text.x=element_text(size = rel(0.8)) ) +\n  labs(\n      title=\"Vaccine effectiveness against COVID infection\",\n      subtitle = \"In Alpha- and Delta-dominant periods\",\n      y=\"Vaccine effectiveness [%]\",\n      x=\"Weeks since second dose\",\n      caption=\"Data: Official Statistics Portal, Lithuania\")\n\n\n\n\nComparison with UK data\nThe UK results for vaccine effectiveness giving protection against symptomatic disease are transcribed from Table 1 of the paper.4\n\nShow code\nuk_values <- read_excel(\"UK Paper Tables.xlsx\", sheet= \"Table 1\") %>%\n  mutate(Cohort\n         = factor(Cohort,\n                  c(\"week 1\",  \"2-9 weeks\", \"10-14 weeks\", \"15-19 weeks\", \"20+ weeks\"),\n                  ordered=TRUE),\n         `Age group`\n         = factor(`Age group`,\n                  c(\"16+\",  \"16-39\", \"40-64\", \"65+\"),\n                  ordered=TRUE))\nuk_values %>%\n  mutate(Value = Value/100) %>%\n  pivot_wider(id_cols = c(\"Vaccine\", \"Age group\", \"Cohort\"),\n              names_from = \"Estimate\",\n              values_from = \"Value\"\n              ) %>%\n  ggplot(aes(x=Cohort, y=Centre, ymin=Lower, ymax=Upper)) +\n  #geom_point() +\n  scale_y_continuous(limits=c(0,1),labels = scales::percent) +\n  geom_crossbar(size=0.2,width=0.25) +\n  #geom_errorbar(mapping=aes(ymin=Lower,ymax=Upper)) +\n  facet_grid(rows=vars(Vaccine), cols=vars(`Age group`)) +\n  theme(plot.caption=element_text(size = rel(0.5)),\n          plot.title=element_text(size = rel(1.2)),\n          axis.text.x=element_text(size = rel(0.4)) ) +\n  labs(\n      title=\"Vaccine effectiveness against symptomatic disease from Delta\",\n      subtitle = \"UK data from Nick Andrews et al.\",\n      y=\"Vaccine effectiveness [%]\",\n      x=\"Weeks since second dose\",\n      caption=\"Reproduced with data from \\\"Vaccine effectiveness and duration of protection of Comirnaty, Vaxzevria and Spikevax against mild and severe COVID-19 in the UK\\\", Table 1\\nNick Andrews, Elise Tessier, Julia Stowe, Charlotte Gower, Freja Kirsebom, Ruth Simmons, Eileen Gallagher,\\nMeera Chand, Kevin Brown, Shamez N Ladhani, Mary Ramsay, Jamie Lopez Bernal\")\n\n\n\n\nThis gives results for four different overlapping age groups. The 16+ has the best overlap with available Lithuanian data.\n\nShow code\nuk_values %>%\n  mutate(Value = Value/100) %>%\n  filter(`Age group`==\"16+\") %>%\n  pivot_wider(id_cols = c(\"Vaccine\", \"Age group\", \"Cohort\"),\n              names_from = \"Estimate\",\n              values_from = \"Value\"\n              ) %>%\n  ggplot(aes(x=Cohort, y=Centre, ymin=Lower, ymax=Upper, shape=`Vaccine`)) +\n  #geom_point() +\n  scale_y_continuous(limits=c(0,1),labels = scales::percent) +\n  geom_pointrange(size=0.5,width=0.5, position=\"jitter\") +\n  #geom_errorbar(mapping=aes(ymin=Lower,ymax=Upper)) +\n  #facet_grid(rows=vars(Vaccine), cols=vars(`Age group`)) +\n  theme(plot.caption=element_text(size = rel(0.5)),\n          plot.title=element_text(size = rel(1.2)),\n          axis.text.x=element_text(size = rel(0.8)) ) +\n  labs(\n      title=\"Vaccine effectiveness against symptomatic disease from Delta\",\n      subtitle = \"UK data from Nick Andrews et al., all ages 16+\",\n      y=\"Vaccine effectiveness [%]\",\n      x=\"Weeks since second dose\",\n      caption=\"Reproduced with data from \\\"Vaccine effectiveness and duration of protection of Comirnaty, Vaxzevria and Spikevax against mild and severe COVID-19 in the UK\\\", Table 1\\nNick Andrews, Elise Tessier, Julia Stowe, Charlotte Gower, Freja Kirsebom, Ruth Simmons, Eileen Gallagher,\\nMeera Chand, Kevin Brown, Shamez N Ladhani, Mary Ramsay, Jamie Lopez Bernal\")\n\n\n\n\nFinally the comparison can be between Lithuanian data for all age groups with UK results for individuals 16+ using one of the two vaccines most commonly used in Lithuania.\n\nShow code\nuk_values %>%\n  mutate(Value = Value/100) %>%\n  filter(`Age group`==\"16+\", `Vaccine`!=\"Spikevax\") %>%\n  pivot_wider(id_cols = c(\"Vaccine\", \"Age group\", \"Cohort\"),\n              names_from = \"Estimate\",\n              values_from = \"Value\"\n              ) %>%\n  ggplot() +\n  scale_y_continuous(limits=c(0,1),labels = scales::percent) +\n  geom_pointrange(mapping=aes(x=Cohort, y=Centre, ymin=Lower, ymax=Upper, shape=`Vaccine`),\n                  size=0.5,width=0.5, position=position_jitter(width=0.05)) +\n\n   geom_boxplot(data=infn_age_bins %>%\n                  filter(dominant_variant==\"delta\", !is.na(mdsv_age_bin)),\n                mapping=aes(x=mdsv_age_bin, y=ve_vs_r0_r2),colour=\"grey\") +\n  geom_jitter(data=infn_age_bins %>%\n                filter(dominant_variant==\"delta\", !is.na(mdsv_age_bin)),\n              mapping=aes(x=mdsv_age_bin, y=ve_vs_r0_r2),\n              alpha=0.5,colour=\"grey\") +\n  annotate(\"text\", x=1,y=0.55,label=\"Vaxzevria\") +\n  annotate(\"text\", x=5,y=0.8,label=\"Comirnaty\") +\n  annotate(\"text\", x=4.5,y=0.25,label=\"Lithuanian data\") +\n  theme(plot.caption=element_text(size = rel(0.6)),\n          plot.title=element_text(size = rel(1.2)),\n        plot.subtitle=element_text(size = rel(0.8)),\n          axis.text.x=element_text(size = rel(1)),\n        legend.position = \"none\") +\n  labs(\n      title=\"Vaccine effectiveness against Delta in Lithuania and the UK\",\n      subtitle = \"UK: Comirnaty and Vaxzevria protection against symptomatic disease\\nLithuania: Aggregated mix (mainly Vaxzevria & Comirnaty) against confirmed cases\",\n      y=\"Vaccine effectiveness [%]\",\n      x=\"Weeks since second dose\",\n      caption=\"UK data from \\\"Vaccine effectiveness and duration of protection of Comirnaty, Vaxzevria and Spikevax against mild and severe COVID-19 in the UK\\\", Table 1\\nNick Andrews, Elise Tessier, Julia Stowe, Charlotte Gower, Freja Kirsebom, Ruth Simmons, Eileen Gallagher,\\nMeera Chand, Kevin Brown, Shamez N Ladhani, Mary Ramsay, Jamie Lopez Bernal\\nLithuania data from the Official Statistics Portal\")\n\n\n\n\nComments on the comparison\nLithuania did not (unlike the UK and Canada) extend the spacing between first and second doses of Vaxzevria or other vaccines so even if the data were available to differentiate vaccine effectiveness for the different vaccines in use, the resulting effectiveness in Lithuania probably differs because of this difference in how the same vaccines were administered.\nLithuanian figures all fall between the UK’s vaccine-specific values for the two vaccines in use, reflecting the mix of vaccines in use in the Lithuanian population (and that this mix is masked by aggregation of the open data available). Vaxzevria was used much more earlier in 2021 than Comirnaty, meaning that “older” vaccinations are more likely to be with Vaxzevria, which may explain why the Lithuanian data for 20+ weeks are closer to the the UK Vaxzevria values than the Comirnaty value.\nLithuania’s vaccination rate for under 18 is very low (and zero below 12). It is not clear whether this comparison would be improved by excluding all Lithuanians under 20.\nCalculations excluding under-20s\nBecause the level rate of vaccination among Lithuanians below the age of 20 is much lower than in the rest of the population, I also present calculations which only consider the population of 20 and above.\nFirst, here is a chart from the OSP showing the vaccination status by age group.\nFigure from https://osp.stat.gov.ltThe vaccine is not available for children under the age of 11, and though figures for 18 and 19 year-olds are comparable with older adults, the data for vaccination and infection/censoring are only available on 20 year increments.\n\nShow code\ninfection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"partially\", \"fully\", \"boosted\")) %>%\n  #filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status\",\n                         breaks = c(\"partially\", \"fully\", \"boosted\"),\n                         labels = c(\"Partially\", \"Fully\", \"Boosted\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous( labels = scales::percent,\n                      sec.axis = sec_axis(~ ., labels = scales::percent)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status - 20+ only\",\n       subtitle=\"7 day rolling average as fraction of total first infections\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\nShow code\ninfection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\")*1000 ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\"),\n                         labels = c(\"Unvaccinated\",\n                                    \"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status, 20+ only\",\n       subtitle=\"7 day average first infections per 1000 population with that status\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\nShow code\ninfection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"unvaxxed\", \"partially\", \"fully\", \"boosted\", \"other\")) %>%\n  #filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, fill=event)) +\n  theme_minimal() +\n  geom_area(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_fill_viridis_d(name = \"Vaccination status\",\n                         breaks = c(\"unvaxxed\", \"partially\", \"fully\", \"boosted\", \"other\"),\n                         labels = c(\"Unvaccinated\", \"Partially\", \"Fully\", \"Boosted\", \"Other\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous( labels = scales::percent,\n                      sec.axis = sec_axis(~ ., labels = scales::percent)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day rolling average as fraction of total first infections (ages 20+)\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nDataset description (English translation)\ngoogle translation of original Lithuanian5\nThe table is intended for monitoring the incidence of infections in four groups of the Lithuanian population: unvaccinated and those who received one / two / three doses of vaccine. The columns in the table describe how many events of each type occurred on a particular day. A total of 17 events are described. Events can only happen to Lithuanian residents who have never been infected before. Event tracking begins on January 1, 2021. The table is aggregated by date, municipality (60 units), gender (2 units), age group (8 units), so each row describes the number of events that occurred on a specific date for a specific age-specific population in a particular municipality.\nAn integral part of this table is the auxiliary table “Initial conditions, on 01.01.2021”, which describes the number of persons who may become infected at the beginning of 2021-01-01. Only with these two tables is it possible to calculate the frequency of infections (normalized daily number of infections) per day from which preliminary conclusions on the efficacy of vaccines can be drawn.\nColumn description:\nfield\ndescription\ndate\nis the day of 2021 on which the events described in the following columns occurred\nmunicipality\nthe municipality of the declared place of residence, describing the group of persons participating in the events\nsex\ngender describing the group of persons involved in the events: V = men, M = women\nage_gr\nan age category that describes the group of people participating in the events\nr0i0\nunvaccinated * who became infected for the first time (event - first infection)\nr0r1\nunvaccinated * who have been vaccinated (event - vaccination)\nr0c0\nunvaccinated * who fell out of the risk of infection (“censored” persons, statistical term, **)\nr0i1\nunvaccinated * who have been vaccinated and become infected for the first time\nr0c1\nunvaccinated * who have been vaccinated and are at risk of becoming infected\nr1i1\n1 dose vaccinated * who became infected for the first time\nr1r2\n1 dose vaccinated * who became vaccinated with the second dose\nr1c1\n1 dose vaccinated * who were at risk of infection (“censored” persons, statistical term, **)\nr1i2\n1 dose vaccine * who became vaccinated with a second dose and became infected for the first time\nr1c2\n1 dose vaccine * who became vaccinated with the second dose and were at risk of infection\nr2i2\n2 doses to be vaccinated * who became infected for the first time\nr2r3\n2 doses to be vaccinated *, which became the third dose\nr2c2\n2 doses to be vaccinated * who fell out of the risk of infection (“censored” persons, statistical term, **)\nr2i3\n2 doses *, which became the third dose and became infected for the first time\nr2c3\n2 doses * that became the third dose and fell out of the risk of infection\nr3i3\n3 doses to be vaccinated * who became infected for the first time\nr3c3\n3 doses to be vaccinated * who fell out of the risk of infection (“censored” persons, statistical term, ***)\nr1i1_mdsv\naverage number of days since the first vaccination in the r1i1 group (***)\nr2i2_mdsv\naverage number of days since the second vaccination in the r2i2 group (***)\nr1i1_john\npercentage of Janssen vaccine recipients in the r1i1 group (***)\nr2i2_john\npercentage of vaccinated Janssen vaccine (as first dose) in the r2i2 group (***)\nColumn naming logic:\nfirst pair of two characters (eg “r1”) - what state the persons “leave” during the described event\nsecond pair of two characters (eg “i2”) - what state persons “enter” during the described event\nfirst character of the character pair (letter)\n\nr\n‘at risk’; people who may become infected (i.e., this has not happened before)\ni\n‘infected’; persons who are infected (first positive diagnostic test)\nc\n‘censored’; persons who are not and cannot be infected (**)\nsecond character of the character pair (number)\n\n0\npersons who have not yet been vaccinated on a given day or have been vaccinated very recently (<in the course of 14 days) *\n1\npersons who have already been vaccinated on a given day 14 days after the first dose or who have received a second dose very recently (<in the course of 14 days) *\n2\npersons who have been vaccinated for 14 days on a given day since the second dose or who have received a third dose very recently (<14 days) *\n3\npersons who have already 14 days since the third dose of the vaccine on a given day *\nFigure from the OSP, annotated in EnglishFootnotes:\n* The effect of the vaccine is considered to start on day 14 from the actual date of vaccination, so in this table describing the effectiveness of the vaccines, the person is considered unvaccinated on the actual day of the first vaccination (as well as on the thirteenth day after the first vaccination). The same principle applies to the second and third doses of the vaccine: they take effect on the 14th day after the actual date of the vaccination.\n** unsupervised persons (without ‘follow-up’, ‘censored’), e.g. due to emigration, lost contact, death, etc.\n*** calculated for all municipalities, all genders, all age groups in total (for confidentiality)\nDataset description (Lithuanian original)\nLentelė yra skirta užsikrėtimų dažniams stebėti keturiose Lietuvos gyventojų grupėse: neskiepytųjų bei skiepytųjų viena/dviem/trim vakcinos dozėmis. Lentelės stulpeliai aprašo, kiek kiekvienos rūšies įvykių įvyko konkrečią dieną. Iš viso yra aprašoma 17 įvykių. Įvykiai gali įvykti tik su iki tol dar niekada neužsikrėtusiais Lietuvos gyventojais. Įvykių stebėjimas prasideda nuo 2021 metų sausio 1 dienos. Lentelė yra agreguota pagal datą, savivaldybę (60 vnt), lytį (2 vnt), amžiaus grupę (8 vnt), tad kiekviena eilutė aprašo įvykių skaičių, kuris nutiko konkrečią datą konkrečios savivaldybės konkrečios lyties konkrečios amžiaus grupės gyventojams.\nŠios lentelės neatsiejama dalis yra pagalbinė lentelė “Pradinės būsenos, 2021-01-01 dieną”, kuri aprašo asmenų, galinčių užsikrėsti skaičių 2021-01-01 dienos pradžioje. Tik turint šias abi lenteles įmanoma suskaičiuoti užsikrėtimų dažnį (normalizuotą dieninį užsikrėtimų skaičių) padieniui, iš kurio galima daryti preliminarias išvadas apie vakcinų efektyvumą.\nStulpelių aprašymas:\nfield\ndescription\ndate\n2021 metų diena, kurios metu įvyko tolimesniuose stulpeliuose aprašomi įvykiai\nmunicipality\ndeklaruotos gyvenamosios vietos savivaldybė, aprašanti įvykiuose dalyvaujančių asmenų grupę\nsex\nlytis, aprašanti įvykiuose dalyvaujančių asmenų grupę: V = vyrai, M = moterys\nage_gr\namžiaus kategorija, aprašanti įvykiuose dalyvaujančių asmenų grupę\nr0i0\nneskiepyti*, kurie pirmą kartą tapo užsikrėtusiais (įvykis - pirmas užsikrėtimas)\nr0r1\nneskiepyti*, kurie tapo paskiepytais (įvykis - paskiepijimas)\nr0c0\nneskiepyti*, kurie iškrito iš rizikos užsikrėsti (“cenzūruoti” asmenys, statistikos terminas, **)\nr0i1\nneskiepyti*, kurie tapo paskiepytais ir pirmą kartą tapo užsikrėtusiais\nr0c1\nneskiepyti*, kurie tapo paskiepytais ir iškrito iš rizikos užsikrėsti\nr1i1\n1 doze skiepyti*, kurie pirmą kartą tapo užsikrėtusiais\nr1r2\n1 doze skiepyti*, kurie tapo paskiepytais antra doze\nr1c1\n1 doze skiepyti*, kurie iškrito iš rizikos užsikrėsti (“cenzūruoti” asmenys, statistikos terminas, **)\nr1i2\n1 doze skiepyti*, kurie tapo paskiepytais antra doze ir pirmą kartą tapo užsikrėtusiais\nr1c2\n1 doze skiepyti*, kurie tapo paskiepytais antra doze ir iškrito iš rizikos užsikrėsti\nr2i2\n2 dozėm skiepyti*, kurie pirmą kartą tapo užsikrėtusiais\nr2r3\n2 dozėm skiepyti*, kurie tapo paskiepytais trečia doze\nr2c2\n2 dozėm skiepyti*, kurie iškrito iš rizikos užsikrėsti (“cenzūruoti” asmenys, statistikos terminas, **)\nr2i3\n2 dozėm skiepyti*, kurie tapo paskiepytais trečia doze ir pirmą kartą tapo užsikrėtusiais\nr2c3\n2 dozėm skiepyti*, kurie tapo paskiepytais trečia doze ir iškrito iš rizikos užsikrėsti\nr3i3\n3 dozėm skiepyti*, kurie pirmą kartą tapo užsikrėtusiais\nr3c3\n3 dozėm skiepyti, kurie iškrito iš rizikos užsikrėsti (“cenzūruoti” asmenys, statistikos terminas, **)\nr1i1_mdsv\nvidutinis dienų skaičius praėjęs nuo pirmo skiepo r1i1 asmenų grupėje (***)\nr2i2_mdsv\nvidutinis dienų skaičius praėjęs nuo antro skiepo r2i2 asmenų grupėje (***)\nr1i1_john\nvakcinuotųjų “Janssen” vakcina procentas r1i1 asmenų grupėje (***)\nr2i2_john\nvakcinuotųjų “Janssen” vakcina (kaip pirma doze) procentas r2i2 asmenų grupėje (***)\nStulpelių pavadinimo sudarymo logika:\npirma dviejų simbolių pora (pvz “r1”) - iš kokios būsenos asmenys “išeina” aprašomo įvykio metu\nantra dviejų simbolių pora (pvz “i2”) - į kokią būseną asmenys “įeina” aprašomo įvykio metu\npirmas simbolių poros simbolis (raidė):\n\nr\n‘at risk’; asmenys, kurie gali užsikrėsti (t.y., tai dar neatsitiko anksčiau)\ni\n‘infected’; asmenys, kurie yra užsikrėtę (pirmas teigiamas diagnostinis testas)\nc\n‘censored’; asmenys, kurie nėra užsikrėtę ir negali užsikrėsti (**)\nantras simbolių poros simbolis (skaičius):\n\n0\nasmenys, kurie konkrečią dieną dar yra neskiepyti arba yra paskiepyti labai neseniai (<14 d. eigoje) *\n1\nasmenys, kuriems konkrečią dieną nuo pirmos skiepo dozės jau yra praėję 14 dienų, arba jie yra paskiepyti antra doze labai neseniai (<14 d. eigoje) *\n2\nasmenys, kuriems konkrečią dieną nuo antros skiepo dozės jau yra praėję 14 dienų, arba jie yra paskiepyti trečia doze labai neseniai (<14 d. eigoje) *\n3\nasmenys, kuriems konkrečią dieną nuo trečios skiepo dozės jau yra praėję 14 dienų *\nDetali lentelės turinio paaiškinimo logika iliustracijoje:\nFigure from OSPIšnašos:\n* laikoma, kad vakcinos efektas prasideda 14-ą dieną nuo faktinės skiepijimo datos, tad šioje lentelėje, aprašančioje vakcinų efektyvumą, asmuo faktinę pirmo skiepo dieną (o taip pat ir tryliktą dieną po pirmo skiepo) yra laikomas nevakcinuotu. Toks pat principas taikomas ir antrai bei trečiai skiepo dozėms: jos įsigalioja 14-ą dieną nuo faktinės skiepijimo datos.\n** nebestebimi asmenys (be ‘follow-up’, ‘censored’), pvz. dėl emigracijos, prarasto kontakto, mirties ir pan.\n*** apskaičiuota visoms savivaldybėms, visom lytims, visoms amžiaus grupėms bendrai (dėl konfidencialumo)\n\n https://osp.stat.gov.lt/documents/10180/9098881/Pfizer_Delta_efektyvumas_20210915_v1_JB.pdf, accessed from https://osp.stat.gov.lt/duomenu-apzvalga-2021-09-15↩︎\nVaccine effectiveness and duration of protection of Comirnaty, Vaxzevria and Spikevax against mild and severe COVID-19 in the UK\", by Nick Andrews, Elise Tessier, Julia Stowe, Charlotte Gower, Freja Kirsebom, Ruth Simmons, Eileen Gallagher, Meera Chand, Kevin Brown, Shamez N Ladhani, Mary Ramsay, Jamie Lopez Bernal, doi: https://doi.org/10.1101/2021.09.15.21263583↩︎\nThis is the r2i2_mdsv column.↩︎\nVaccine effectiveness and duration of protection of Comirnaty, Vaxzevria and Spikevax against mild and severe COVID-19 in the UK\", by Nick Andrews, Elise Tessier, Julia Stowe, Charlotte Gower, Freja Kirsebom, Ruth Simmons, Eileen Gallagher, Meera Chand, Kevin Brown, Shamez N Ladhani, Mary Ramsay, Jamie Lopez Bernal, doi: https://doi.org/10.1101/2021.09.15.21263583↩︎\nhttps://open-data-ls-osp-sdg.hub.arcgis.com/datasets/1fd352a1c4534afe8ff87c564c0724c0_0/about↩︎\n",
      "last_modified": "2022-05-10T10:47:09+00:00"
    }
  ],
  "collections": []
}
