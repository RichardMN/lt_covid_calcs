{
  "articles": [
    {
      "path": "age-breakdowns.html",
      "title": "Age cohort calculations",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\nCOVID-19 in Lithuania: Age cohort graphs\nData source\nThese charts are drawn using data published by the Official Statistics Portal (OSP) on their COVID-19 open data site, along with the annual population counts for Lithuanian municipalities, also published by the OSP.\nThe R markdown source is available as a github repo.\n\nShow code\nage_bands_municipalities <- tibble(lt_aggregate) %>%\n#  select(-object_id) %>%\n  mutate(date = as_date(date)) %>%\n  group_by(municipality_name, date, age_gr) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE))) %>%\n  ungroup()\n\nage_bands <- age_bands_municipalities %>%\n  group_by(date, age_gr) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE)))\n\nnatl_age_data <-  lt_age_sex_data %>%\n  filter( location == \"Total\" ) %>%\n  select(-location) %>%\n  pivot_longer(\n    cols = !\"total\",\n    values_to = \"count\",\n    names_to = \"age_range\") %>%\n  mutate_if(is.character, str_remove_all, pattern = \"\\\\d+[^\\\\d]\") %>%\n  mutate(age_range = as.numeric(age_range)) %>%\n  mutate(age_range = replace_na(age_range, 85)) %>%\n  mutate(cohort = cut(age_range,\n                      c(0, 9, 19, 29, 39, 49, 59, 69, 79, 89 ),\n                      c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80+\"),\n                      include.lowest = TRUE)) %>%\n  select(-age_range,-total) %>%\n  group_by(cohort) %>%\n  summarise(count = sum(count))\n\nlt_age_data <- lt_age_sex_data %>%\n  filter(grepl(\"mun.$\", location)) %>%\n  pivot_longer(\n    cols = !c(\"location\",\"total\"),\n    values_to = \"count\",\n    names_to = \"age range\") %>%\n  mutate_if(is.character, str_replace_all, pattern = \" mun.\", replacement = \"\")\nage_band_factors <- age_bands %>%\n  mutate(cohort = case_when(\n    age_gr == \"80-89\" ~ \"80+\",\n    age_gr == \"90-99\" ~ \"80+\",\n    age_gr == \"Centenarianai\" ~ \"80+\",\n    age_gr == \"Nenustatyta\" ~ NA_character_,\n    TRUE ~ age_gr\n  )) %>%\n  filter(!is.na(cohort)) %>%\n  select(-age_gr) %>%\n  group_by(date, cohort) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE))) %>%\n  ungroup()\n\nper_capita_rates <- left_join(age_band_factors, natl_age_data, by = c(\"cohort\")) %>%\n  mutate(population = count,\n         cases_per_100k = new_cases / count * 100000,\n         deaths_all_per_mill = deaths_all / count * 1000000) %>%\n  select(-count)\n\n\n\n\nShow code\ncolourCount = length(unique(age_bands$age_gr))\ngetPalette = colorRampPalette(brewer.pal(8, \"Set2\"))\n\nage_bands %>%\n  group_by(age_gr) %>%\n  mutate(cases_7d = zoo::rollmean(new_cases,k=7, fill=0) ) %>%\n  ungroup() %>%\n  filter(date > ymd(\"2021-08-01\")) %>%\n  ggplot(aes(x = date, y=cases_7d, fill=age_gr)) +\n  theme_minimal() +\n  geom_col(width=1, position = position_stack(reverse = TRUE)) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_fill_viridis_d(\n    name = \"Age cohort\",\n    option = \"inferno\",\n    breaks = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\",\n               \"70-79\", \"80-89\", \"90-99\", \"Centenarianai\",  \"Nenustatyta\"),\n    labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\",\n               \"70-79\", \"80-89\", \"90-99\", \"100+\",  \"Unknown\")\n  ) +\n  scale_y_continuous(sec.axis = dup_axis()) +\n  labs(title=\"Lithuania - COVID-19 cases by age group\",\n       subtitle=\"7 day rolling average\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nThese charts are inspired by the narrow age cohort graph given by the OSP on their pandemic illustrations page:\n\nBecause the age cohorts given in the two sources used do not align, when calculating COVID rates relative to age cohorts, a smaller number of larger cohorts is used. It is also possible to extend the graph further back into 2021.\n\nShow code\nper_capita_rates %>%\n  group_by(cohort) %>%\n  mutate(pc_cases_14d = zoo::rollsum(cases_per_100k,k=14, fill=0, align=\"right\") ) %>%\n  ungroup() %>%\n  filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_14d, colour=cohort)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Age cohort\", option = \"inferno\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by age group\",\n       subtitle=\"14 day cumulative per 100,000\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\nShow code\nper_capita_rates %>%\n  group_by(cohort) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(cases_per_100k,k=7, fill=0, align=\"right\") ) %>%\n  ungroup() %>%\n  filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=cohort)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Age cohort\", option = \"inferno\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by age group\",\n       subtitle=\"7 day rolling average per 100,000\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\nShow code\nper_capita_rates %>%\n  group_by(cohort) %>%\n  mutate(pc_deaths_7d_mean = zoo::rollmean(deaths_all_per_mill,k=7, fill=0, align=\"right\") ) %>%\n  ungroup() %>%\n  filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_deaths_7d_mean, colour=cohort)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Age cohort\", option = \"inferno\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 deaths by age group\",\n       subtitle=\"7 day average per million\",\n       y=\"Deaths\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\n\n\n",
      "last_modified": "2021-11-24T10:34:10+00:00"
    },
    {
      "path": "breakthrough-calculations.html",
      "title": "Lithuanian breakthrough calculations",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\nCOVID-19 in Lithuania: Vaccinations status and incidence, vaccine effectiveness\nLithuania’s Official Statistics Portal (OSP) is now issuing a lot of data which indicates transitions (“events”) for individuals on each day, aggregated by municipality (Lithuania has 60), gender and age cohort. I am aggregating these figures further to generate national data to look at how COVID-19 is now affecting vaccinated and unvaccinated individuals.\nAll this comes with the caveats that I am working from OSP data but these are my calculations and there may be errors. I am not an epidemiologist. Straightforward presentation of case numbers have not seen much adjustment.\nFurther calculations (towards estimated vaccine effectiveness) may have error, including in calculations of the unvaccinated population, which influences the estimate of the proportional incidence in the unvaccinated population and thus the relative incidence in vaccinated populations.\nData source\nThese charts are drawn using data published by the Official Statistics Portal (OSP) on their COVID-19 open data site, along with the annual population counts for Lithuanian municipalities, also published by the OSP.\nThe R markdown source is available as a github repo.\n\nShow code\nlt_natl_ve_data <- tibble(lt_vacc_eff_data) %>%\n  #select(-object_id) %>%\n  group_by(date, sex, age_gr) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE))) %>%\n  ungroup()\n\n\nlt_natl_ve_data_adults <- tibble(lt_vacc_eff_data) %>%\n  #select(-object_id) %>%\n  filter(age_gr != \"0-19\") %>%\n  group_by(date, sex, age_gr) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE))) %>%\n  ungroup()\n\nr0_init <- sum(initial_state$at_risk)\nr0_init_adults <- sum(initial_state %>%\n                          filter(age_gr != \"0-19\") %>%\n                        pull(at_risk))\n\ninfection_comparisons_wide <- lt_natl_ve_data %>%\n  group_by(date) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE))) %>%\n  mutate(partially = (r1i1+r1i2) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n         fully = (r2i2+r2i3+r3i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3)) %>%\n  ungroup() %>%\n  # calculate populations in each category\n  mutate(\n    censored = r0c0+r0c1+r1c1+r1c2+r2c2+r2c3+r3c3, # per day\n    infected = r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3, # per day\n    r_pop = r0_init - cumsum(censored + infected),\n    r_pop_r1 = cumsum(r0r1-r1r2-r1i1-r1c1-r1i2-r1c2),\n    r_pop_r2 = cumsum(r1r2-r2r3-r2i2-r2c2-r2i3-r2c3),\n    r_pop_r3 = cumsum(r2r3-r3c3-r3i3),\n    r_pop_r0 = r0_init - r_pop_r1 - r_pop_r2 - r_pop_r3) %>%\n  # fractions of each population infected\n  mutate(\n    i_frac_r0 = (r0i0+r0i1) / r_pop_r0,\n    i_frac_r1 = (r1i1+r1i2) / r_pop_r1,\n    i_frac_r2 = (r2i2+r2i3) / r_pop_r2,\n    i_frac_r3 = (r3i3) / r_pop_r3\n  ) %>%\n  mutate(\n    ve_vs_r0_r1 =  (i_frac_r0 - i_frac_r1)/i_frac_r0,\n    ve_vs_r0_r2 = (i_frac_r0 - i_frac_r2)/i_frac_r0, #i_frac_r2 / i_frac_r0,\n    ve_vs_r0_r3 = if_else(r_pop_r3 != 0,(i_frac_r0 - i_frac_r3)/i_frac_r0, NA_real_)\n  )\n\ninfection_comparisons_wide_adults <- lt_natl_ve_data_adults %>%\n  group_by(date) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE))) %>%\n  mutate(partially = (r1i1+r1i2) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n         fully = (r2i2+r2i3+r3i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3)) %>%\n  ungroup() %>%\n  # calculate populations in each category\n  mutate(\n    censored = r0c0+r0c1+r1c1+r1c2+r2c2+r2c3+r3c3, # per day\n    infected = r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3, # per day\n    r_pop = r0_init_adults - cumsum(censored + infected),\n    r_pop_r1 = cumsum(r0r1-r1r2-r1i1-r1c1-r1i2-r1c2),\n    r_pop_r2 = cumsum(r1r2-r2r3-r2i2-r2c2-r2i3-r2c3),\n    r_pop_r3 = cumsum(r2r3-r3c3-r3i3),\n    r_pop_r0 = r0_init_adults - r_pop_r1 - r_pop_r2 - r_pop_r3) %>%\n  # fractions of each population infected\n  mutate(\n    i_frac_r0 = (r0i0+r0i1) / r_pop_r0,\n    i_frac_r1 = (r1i1+r1i2) / r_pop_r1,\n    i_frac_r2 = (r2i2+r2i3) / r_pop_r2,\n    i_frac_r3 = (r3i3) / r_pop_r3\n  ) %>%\n  mutate(\n    ve_vs_r0_r1 =  (i_frac_r0 - i_frac_r1)/i_frac_r0,\n    ve_vs_r0_r2 = (i_frac_r0 - i_frac_r2)/i_frac_r0, #i_frac_r2 / i_frac_r0,\n    ve_vs_r0_r3 = if_else(r_pop_r3 != 0,(i_frac_r0 - i_frac_r3)/i_frac_r0, NA_real_)\n  )\n\n\n\n\nShow code\nmedian_date <- function(data, cols=c(date=\"date\", sums=\"sums\")) {\n  sorted_data <- data %>% select(cols) %>%\n    arrange(cols[\"date\"])\n  medians <- rep_len(NA_Date_, length(data[[cols[\"date\"]]]))\n  last_median_idx <- 1\n  for (i in 1:length(data[[cols[\"date\"]]])) {\n    if (data[[cols[\"sums\"]]][i]>0) {\n      if (last_median_idx == 1) {\n        last_median_idx <- i\n        medians[i] <- data[[cols[\"date\"]]][last_median_idx]\n      } else {\n        if (data[[cols[\"sums\"]]][i] / 2 > data[[cols[\"sums\"]]][last_median_idx] ) {\n          j <- min(last_median_idx+1,i)\n          while (data[[cols[\"sums\"]]][i] / 2 > data[[cols[\"sums\"]]][j]) {\n            j <- j + 1\n          }\n          last_median_idx <- j - 1\n        }\n        medians[i] <- data[[cols[\"date\"]]][last_median_idx]\n      }\n    }\n  }\n  return(as_date(medians))\n}\n\nnarrowed_comps <- infection_comparisons_wide %>%\n  mutate(fully_vxd_14d = r1r2) %>%\n  select(date, fully_vxd_14d) %>%\n  mutate(fully_vxd_14d_tot = cumsum(fully_vxd_14d))\n\nmedian_age_calcs <- infection_comparisons_wide %>%\n  mutate(med_date = median_date(data = narrowed_comps,\n                                cols=c(date=\"date\", sums=\"fully_vxd_14d_tot\"))) %>%\n  mutate(med_vxd_age = if_else(is.na(med_date),\n                               NA_integer_,\n                               # individuals are only counted into r1r2\n                               # once they are 14 days beyond second dose\n                               as.integer(date) - as.integer(med_date)+14L))\n\ninfection_comparisons <- infection_comparisons_wide %>%\n  pivot_longer(\n    cols = !c(\"date\"),\n    values_to = \"count\",\n    names_to = \"event\")\n\n\ninfection_comparisons_adults <- infection_comparisons_wide_adults %>%\n  pivot_longer(\n    cols = !c(\"date\"),\n    values_to = \"count\",\n    names_to = \"event\")\n\n\n\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"r0i0\", \"r0i1\", \"r1i1\", \"r1i2\", \"r2i2\", \"r2i3\", \"r3i3\")) %>%\n  filter(date > ymd(\"2021-01-7\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Individual\\nvaccination\\nstatus\",\n                         breaks = c(\"r0i0\", \"r0i1\", \"r1i1\", \"r1i2\", \"r2i2\", \"r2i3\", \"r3i3\"),\n                         labels = c(\"Unvaccinated or\\nless than 14d\\nafter 1st dose\",\n                                    \"14d after\\n1st dose\",\n                                    \"14+d after\\n1st dose\",\n                                    \"14d after\\n2nd dose\",\n                                    \"14+d after\\n2nd dose\",\n                                    \"14d after\\n3rd dose\",\n                                    \"14+d after\\n3rd dose\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day rolling average\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"partially\", \"fully\")) %>%\n  #filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status\",\n                         breaks = c(\"partially\", \"fully\"),\n                         labels = c(\"Partially\", \"Fully\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous( labels = scales::percent,\n                      sec.axis = sec_axis(~ ., labels = scales::percent)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day rolling average as fraction of total infections\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\")*1000 ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\"),\n                         labels = c(\"Unvaccinated\",\n                                    \"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day average cases per 1000 population with that status\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\nShow code\nmed_age_plot <- median_age_calcs %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=med_vxd_age)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  scale_x_date() +\n  scale_y_continuous(\n    sec.axis = sec_axis(~ .,\n                        breaks = seq(from = 0, to = 240, by = 30),),\n    limits = c(0,NA),\n    breaks = seq(from = 0, to = 240, by = 30),\n    oob = scales::oob_censor)  +\n  labs(x=\"Date\", y=\"Median days\\nsince 2nd dose\")\n\ninf_eff_plot <- infection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  filter(pc_cases_7d_mean<1) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\"),\n                         labels = c(\"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(\n    sec.axis = sec_axis(\n      ~ .,\n      breaks = seq(from = 0, to = 1, by = 0.1),\n      labels = label_percent(accuracy=1)),\n    limits = c(0,1),\n    breaks = seq(from = 0, to = 1, by = 0.1),\n    #limits = c(0,15),\n    labels = label_percent(accuracy=1),\n    oob = scales::oob_censor) +\n  labs(\n       y=\"Effectiveness\",\n       y=\"Date\"\n) +\n  scale_x_date()\n\ninf_eff_plot / med_age_plot + plot_layout(heights = c(2,1)) +\n  plot_annotation(\n    title=\"Lithuania - COVID-19 vaccine effectiveness fades beyond 4 months\",\n       subtitle=\"Calculated on 7 day averages, compared with median days since 2nd dose\",\n    caption=\"Richard Martin-Nielsen\\nData: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\n\nShow code\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_14d_mean = zoo::rollmean(count,k=14, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  filter(pc_cases_14d_mean<1) %>%\n  ggplot(aes(x = date, y=pc_cases_14d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\"),\n                         labels = c(\"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(\n    sec.axis = sec_axis(\n      ~ .,\n      breaks = seq(from = 0, to = 1, by = 0.1),\n      labels = scales::percent),\n    limits = c(0,1),\n    breaks = seq(from = 0, to = 1, by = 0.1),\n    #limits = c(0,15),\n    labels = scales::percent,\n    oob = scales::oob_censor) +\n  labs(title=\"Lithuania - COVID-19 vaccine effectiveness by vaccination status\",\n       subtitle=\"14 day mean\",\n       y=\"Vaccine effectiveness\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nCalculations excluding under-20s\nBecause the level rate of vaccination among Lithuanians below the age of 20 is much lower than in the rest of the population, I also present calculations which only consider the population of 20 and above. The vaccine is not available for children under the age of 11, and though figures for 18 and 19 year-olds are comparable with older adults, the data for vaccination and infection/censoring are only available on 20 year increments.\n\n\nShow code\ninfection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"partially\", \"fully\")) %>%\n  #filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status\",\n                         breaks = c(\"partially\", \"fully\"),\n                         labels = c(\"Partially\", \"Fully\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous( labels = scales::percent,\n                      sec.axis = sec_axis(~ ., labels = scales::percent)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status - 20+ only\",\n       subtitle=\"7 day rolling average as fraction of total infections\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\nShow code\ninfection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\")*1000 ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\"),\n                         labels = c(\"Unvaccinated\",\n                                    \"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day average cases per 1000 population with that status\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\nShow code\ninf_eff_plot_adults <- infection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  filter(pc_cases_7d_mean<1) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\"),\n                         labels = c(\"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(\n    sec.axis = sec_axis(\n      ~ .,\n      breaks = seq(from = 0, to = 1, by = 0.1),\n      labels = label_percent(accuracy=1)),\n    limits = c(0,1),\n    breaks = seq(from = 0, to = 1, by = 0.1),\n    #limits = c(0,15),\n    labels = label_percent(accuracy=1),\n    oob = scales::oob_censor) +\n  labs(\n       y=\"Effectiveness\",\n       y=\"Date\"\n) +\n  scale_x_date()\n\ninf_eff_plot_adults / med_age_plot + plot_layout(heights = c(2,1)) +\n  plot_annotation(\n    title=\"Lithuania - COVID-19 vaccine effectiveness fades beyond 4 months\",\n       subtitle=\"Calculated on 7 day averages, ages 20+, compared with median days since 2nd dose\",\n    caption=\"Richard Martin-Nielsen\\nData: Office of Statistics Portal osp.stat.gov.lt\")\n\n\nShow code\n# combined_figure <- ggarrange(inf_eff_plot,\n#           med_age_plot,\n#           ncol=1,\n#           heights=c(3,1)\n#           )\n# \n# annotate_figure(combined_figure,\n#                 bottom=text_grob(\"Richard Martin-Nielsen\\nData: Office of Statistics Portal osp.stat.gov.lt\", hjust=1, x=1, size=8))\n\n\n\n\n\n\n",
      "last_modified": "2021-11-24T10:36:39+00:00"
    },
    {
      "path": "index.html",
      "title": "Lithuanian COVID-19 calculations",
      "description": "Regularly updated graphs and calculations of Lithuanian COVID-19 data\n",
      "author": [],
      "date": "2021-11-19",
      "contents": "\nLithuanian COVID calculations\nThis website uses RMarkdown files to automatically generate graphs which present for Lithuania:\nCase and death incidence for COVID-19 for national age cohorts\nComparative incidence by vaccination status and vaccine effectiveness\n\n\n\n",
      "last_modified": "2021-11-24T10:36:39+00:00"
    }
  ],
  "collections": []
}
