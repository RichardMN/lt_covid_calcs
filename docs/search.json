{
  "articles": [
    {
      "path": "age-breakdowns.html",
      "title": "Age cohort calculations",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\nCOVID-19 in Lithuania: Age cohort graphs\nData source\nThese charts are drawn using data published by the Official Statistics Portal (OSP) on their COVID-19 open data site, along with the annual population counts for Lithuanian municipalities, also published by the OSP.\nThe R markdown source is available as a github repo.\n\n\nShow code\n\nage_bands_municipalities <- tibble(lt_aggregate) %>%\n#  select(-object_id) %>%\n  mutate(date = as_date(date)) %>%\n  group_by(municipality_name, date, age_gr) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE))) %>%\n  ungroup()\n\nage_bands <- age_bands_municipalities %>%\n  group_by(date, age_gr) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE)))\n\nnatl_age_data <-  lt_age_sex_data %>%\n  filter( location == \"Total\" ) %>%\n  select(-location) %>%\n  pivot_longer(\n    cols = !\"total\",\n    values_to = \"count\",\n    names_to = \"age_range\") %>%\n  mutate_if(is.character, str_remove_all, pattern = \"\\\\d+[^\\\\d]\") %>%\n  mutate(age_range = as.numeric(age_range)) %>%\n  mutate(age_range = replace_na(age_range, 85)) %>%\n  mutate(cohort = cut(age_range,\n                      c(0, 9, 19, 29, 39, 49, 59, 69, 79, 89 ),\n                      c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80+\"),\n                      include.lowest = TRUE)) %>%\n  select(-age_range,-total) %>%\n  group_by(cohort) %>%\n  summarise(count = sum(count))\n\nlt_age_data <- lt_age_sex_data %>%\n  filter(grepl(\"mun.$\", location)) %>%\n  pivot_longer(\n    cols = !c(\"location\",\"total\"),\n    values_to = \"count\",\n    names_to = \"age range\") %>%\n  mutate_if(is.character, str_replace_all, pattern = \" mun.\", replacement = \"\")\nage_band_factors <- age_bands %>%\n  mutate(cohort = case_when(\n    age_gr == \"80-89\" ~ \"80+\",\n    age_gr == \"90-99\" ~ \"80+\",\n    age_gr == \"Centenarianai\" ~ \"80+\",\n    age_gr == \"Nenustatyta\" ~ NA_character_,\n    TRUE ~ age_gr\n  )) %>%\n  filter(!is.na(cohort)) %>%\n  select(-age_gr) %>%\n  group_by(date, cohort) %>%\n  summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE))) %>%\n  ungroup()\n\nper_capita_rates <- left_join(age_band_factors, natl_age_data, by = c(\"cohort\")) %>%\n  mutate(population = count,\n         cases_per_100k = new_cases / count * 100000,\n         deaths_all_per_mill = deaths_all / count * 1000000) %>%\n  select(-count)\n\n\n\n\n\nShow code\n\ncolourCount = length(unique(age_bands$age_gr))\ngetPalette = colorRampPalette(brewer.pal(8, \"Set2\"))\n\nage_bands %>%\n  group_by(age_gr) %>%\n  mutate(cases_7d = zoo::rollmean(new_cases,k=7, fill=0) ) %>%\n  ungroup() %>%\n  filter(date > ymd(\"2021-08-01\")) %>%\n  ggplot(aes(x = date, y=cases_7d, fill=age_gr)) +\n  theme_minimal() +\n  geom_col(width=1, position = position_stack(reverse = TRUE)) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_fill_viridis_d(\n    name = \"Age cohort\",\n    option = \"inferno\",\n    breaks = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\",\n               \"70-79\", \"80-89\", \"90-99\", \"Centenarianai\",  \"Nenustatyta\"),\n    labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\",\n               \"70-79\", \"80-89\", \"90-99\", \"100+\",  \"Unknown\")\n  ) +\n  scale_y_continuous(sec.axis = dup_axis()) +\n  labs(title=\"Lithuania - COVID-19 cases by age group\",\n       subtitle=\"7 day rolling average\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nThese charts are inspired by the narrow age cohort graph given by the OSP on their pandemic illustrations page:\nFigure from https://osp.stat.gov.ltBecause the age cohorts given in the two sources used do not align, when calculating COVID rates relative to age cohorts, a smaller number of larger cohorts is used. It is also possible to extend the graph further back into 2021.\n\n\nShow code\n\nper_capita_rates %>%\n  group_by(cohort) %>%\n  mutate(pc_cases_14d = zoo::rollsum(cases_per_100k,k=14, fill=0, align=\"right\") ) %>%\n  ungroup() %>%\n  filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_14d, colour=cohort)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Age cohort\", option = \"inferno\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by age group\",\n       subtitle=\"14 day cumulative per 100,000\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\n\nShow code\n\nper_capita_rates %>%\n  group_by(cohort) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(cases_per_100k,k=7, fill=0, align=\"right\") ) %>%\n  ungroup() %>%\n  filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=cohort)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Age cohort\", option = \"inferno\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by age group\",\n       subtitle=\"7 day rolling average per 100,000\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\n\nShow code\n\nper_capita_rates %>%\n  group_by(cohort) %>%\n  mutate(pc_deaths_7d_mean = zoo::rollmean(deaths_all_per_mill,k=7, fill=0, align=\"right\") ) %>%\n  ungroup() %>%\n  filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_deaths_7d_mean, colour=cohort)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Age cohort\", option = \"inferno\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 deaths by age group\",\n       subtitle=\"7 day average per million\",\n       y=\"Deaths\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\n\n\n",
      "last_modified": "2021-11-20T09:50:43+02:00"
    },
    {
      "path": "breakthrough-calculations.html",
      "title": "Vaccination status and incidence, vaccine effectiveness ",
      "author": [],
      "date": "`r Sys.Date()`",
      "contents": "\nLithuania’s Official Statistics Portal (OSP) issues a lot of data which indicates transitions (“events”) for individuals on each day, aggregated by municipality (Lithuania has 60), gender and age cohort. I aggregate these figures further to generate national data to look at how COVID-19 is now affecting vaccinated and unvaccinated individuals.\nAll this comes with the caveats that I am working from OSP data but these are my calculations and there may be errors. I am not an epidemiologist. Straightforward presentation of case numbers have not seen much adjustment.\nFurther calculations (towards estimated vaccine effectiveness) may have error, including in calculations of the unvaccinated population, which influences the estimate of the proportional incidence in the unvaccinated population and thus the relative incidence in vaccinated populations.\nDelta has been the dominant strain of SARS-CoV2 in Lithuania since July 2021 and so some of the inflection at that point may be better attributed to the shift of the prevalent strain rather than the base aging of the vaccinations.\nData source\nThese charts are drawn using data published by the Official Statistics Portal (OSP) on their COVID-19 open data site, along with the annual population counts for Lithuanian municipalities, also published by the OSP.\n\n\nShow code\n\nlibrary(vroom)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(ggplot2)\nlibrary(spatstat)\nlibrary(zoo)\nlibrary(scales)\nlibrary(patchwork)\n\n# Set-up output ----\n\nknitr::opts_chunk$set(\n  echo = FALSE,\n  message = FALSE,\n  warning = FALSE\n)\n\ntheme_set(\n  theme_minimal() +\n    theme(legend.position = \"bottom\")\n  )\n\n# dataset source: ----\n\n# https://open-data-ls-osp-sdg.hub.arcgis.com/datasets/1fd352a1c4534afe8ff87c564c0724c0_0/about\n\n# dataset description: ----\n\n# [google translation of original Lithuanian]\n# The table is intended for monitoring the incidence of infections in four groups of the Lithuanian population: unvaccinated and those who received one / two / three doses of vaccine. The columns in the table describe how many events of each type occurred on a particular day. A total of 17 events are described. Events can only happen to Lithuanian residents who have never been infected before. Event tracking begins on January 1, 2021. The table is aggregated by date, municipality (60 units), gender (2 units), age group (8 units), so each row describes the number of events that occurred on a specific date for a specific age-specific population in a particular municipality.\n# An integral part of this table is the auxiliary table \"Initial conditions, on 01.01.2021\", which describes the number of persons who may become infected at the beginning of 2021-01-01. Only with these two tables is it possible to calculate the frequency of infections (normalized daily number of infections) per day from which preliminary conclusions on the efficacy of vaccines can be drawn.\n#\n# Column description:\n#   date is the day of 2021 on which the events described in the following columns occurred\n# municipality - the municipality of the declared place of residence, describing the group of persons participating in the events\n# sex - gender describing the group of persons involved in the events: V = men, M = women\n# age_gr - an age category that describes the group of people participating in the events\n# r0i0 - unvaccinated * who became infected for the first time (event - first infection)\n# r0r1 - unvaccinated * who have been vaccinated (event - vaccination)\n# r0c0 - unvaccinated * who fell out of the risk of infection (\"censored\" persons, statistical term, **)\n# r0i1 - unvaccinated * who have been vaccinated and become infected for the first time\n# r0c1 - unvaccinated * who have been vaccinated and are at risk of becoming infected\n# r1i1 - 1 dose vaccinated * who became infected for the first time\n# r1r2 - 1 dose vaccinated * who became vaccinated with the second dose\n# r1c1 - 1 dose vaccinated * who were at risk of infection (\"censored\" persons, statistical term, **)\n# r1i2 - 1 dose vaccine * who became vaccinated with a second dose and became infected for the first time\n# r1c2 - 1 dose vaccine * who became vaccinated with the second dose and were at risk of infection\n# r2i2 - 2 doses to be vaccinated * who became infected for the first time\n# r2r3 - 2 doses to be vaccinated *, which became the third dose\n# r2c2 - 2 doses to be vaccinated * who fell out of the risk of infection (\"censored\" persons, statistical term, **)\n# r2i3 - 2 doses *, which became the third dose and became infected for the first time\n# r2c3 - 2 doses * that became the third dose and fell out of the risk of infection\n# r3i3 - 3 doses to be vaccinated * who became infected for the first time\n# r3c3 - 3 doses to be vaccinated * who fell out of the risk of infection (\"censored\" persons, statistical term, ***)\n# r1i1_mdsv - average number of days since the first vaccination in the r1i1 group (***)\n# r2i2_mdsv - average number of days since the second vaccination in the r2i2 group (***)\n# r1i1_john - percentage of Janssen vaccine recipients in the r1i1 group (***)\n# r2i2_john - percentage of vaccinated Janssen vaccine (as first dose) in the r2i2 group (***)\n#\n# Column naming logic:\n#   first pair of two characters (eg \"r1\") - what state the persons \"leave\" during the described event\n# second pair of two characters (eg \"i2\") - what state persons \"enter\" during the described event\n# first character of the character pair (letter):\n#   r - 'at risk'; people who may become infected (i.e., this has not happened before)\n# i - 'infected'; persons who are infected (first positive diagnostic test)\n# c - 'censored'; persons who are not and cannot be infected (**)\n# second character of the character pair (number):\n#   0 - persons who have not yet been vaccinated on a given day or have been vaccinated very recently (<in the course of 14 days) *\n#   1 - persons who have already been vaccinated on a given day 14 days after the first dose or who have received a second dose very recently (<in the course of 14 days) *\n#   2 - persons who have been vaccinated for 14 days on a given day since the second dose or who have received a third dose very recently (<14 days) *\n#   3 - persons who have already 14 days since the third dose of the vaccine on a given day *\n#\n#   Detailed logic of the table content explanation in the illustration:\n#   illustration\n# Footnotes:\n#   * The effect of the vaccine is considered to start on day 14 from the actual date of vaccination, so in this table describing the effectiveness of the vaccines, the person is considered unvaccinated on the actual day of the first vaccination (as well as on the thirteenth day after the first vaccination). The same principle applies to the second and third doses of the vaccine: they take effect on the 14th day after the actual date of the vaccination.\n# ** unsupervised persons (without 'follow-up', 'censored'), e.g. due to emigration, lost contact, death, etc.\n# *** calculated for all municipalities, all genders, all age groups in total (for confidentiality)\n\n# Lentelė yra skirta užsikrėtimų dažniams stebėti keturiose Lietuvos gyventojų grupėse: neskiepytųjų bei skiepytųjų viena/dviem/trim vakcinos dozėmis. Lentelės stulpeliai aprašo, kiek kiekvienos rūšies įvykių įvyko konkrečią dieną. Iš viso yra aprašoma 17 įvykių. Įvykiai gali įvykti tik su iki tol dar niekada neužsikrėtusiais Lietuvos gyventojais. Įvykių stebėjimas prasideda nuo 2021 metų sausio 1 dienos. Lentelė yra agreguota pagal datą, savivaldybę (60 vnt), lytį (2 vnt), amžiaus grupę (8 vnt), tad kiekviena eilutė aprašo įvykių skaičių, kuris nutiko konkrečią datą konkrečios savivaldybės konkrečios lyties konkrečios amžiaus grupės gyventojams.\n# Šios lentelės neatsiejama dalis yra pagalbinė lentelė \"Pradinės būsenos, 2021-01-01 dieną\", kuri aprašo asmenų, galinčių užsikrėsti skaičių 2021-01-01 dienos pradžioje. Tik turint šias abi lenteles įmanoma suskaičiuoti užsikrėtimų dažnį (normalizuotą dieninį užsikrėtimų skaičių) padieniui, iš kurio galima daryti preliminarias išvadas apie vakcinų efektyvumą.\n#\n# Stulpelių aprašymas:\n#   date - 2021 metų diena, kurios metu įvyko tolimesniuose stulpeliuose aprašomi įvykiai\n# municipality - deklaruotos gyvenamosios vietos savivaldybė, aprašanti įvykiuose dalyvaujančių asmenų grupę\n# sex - lytis, aprašanti įvykiuose dalyvaujančių asmenų grupę: V = vyrai, M = moterys\n# age_gr - amžiaus kategorija, aprašanti įvykiuose dalyvaujančių asmenų grupę\n# r0i0 - neskiepyti*, kurie pirmą kartą tapo užsikrėtusiais (įvykis - pirmas užsikrėtimas)\n# r0r1 - neskiepyti*, kurie tapo paskiepytais (įvykis - paskiepijimas)\n# r0c0 - neskiepyti*, kurie iškrito iš rizikos užsikrėsti (\"cenzūruoti\" asmenys, statistikos terminas, **)\n# r0i1 - neskiepyti*, kurie tapo paskiepytais ir pirmą kartą tapo užsikrėtusiais\n# r0c1 - neskiepyti*, kurie tapo paskiepytais ir iškrito iš rizikos užsikrėsti\n# r1i1 - 1 doze skiepyti*, kurie pirmą kartą tapo užsikrėtusiais\n# r1r2 - 1 doze skiepyti*, kurie tapo paskiepytais antra doze\n# r1c1 - 1 doze skiepyti*, kurie iškrito iš rizikos užsikrėsti (\"cenzūruoti\" asmenys, statistikos terminas, **)\n# r1i2 - 1 doze skiepyti*, kurie tapo paskiepytais antra doze ir pirmą kartą tapo užsikrėtusiais\n# r1c2 - 1 doze skiepyti*, kurie tapo paskiepytais antra doze ir iškrito iš rizikos užsikrėsti\n# r2i2 - 2 dozėm skiepyti*, kurie pirmą kartą tapo užsikrėtusiais\n# r2r3 - 2 dozėm skiepyti*, kurie tapo paskiepytais trečia doze\n# r2c2 - 2 dozėm skiepyti*, kurie iškrito iš rizikos užsikrėsti (\"cenzūruoti\" asmenys, statistikos terminas, **)\n# r2i3 - 2 dozėm skiepyti*, kurie tapo paskiepytais trečia doze ir pirmą kartą tapo užsikrėtusiais\n# r2c3 - 2 dozėm skiepyti*, kurie tapo paskiepytais trečia doze ir iškrito iš rizikos užsikrėsti\n# r3i3 - 3 dozėm skiepyti*, kurie pirmą kartą tapo užsikrėtusiais\n# r3c3 - 3 dozėm skiepyti*, kurie iškrito iš rizikos užsikrėsti (\"cenzūruoti\" asmenys, statistikos terminas, ***)\n# r1i1_mdsv - vidutinis dienų skaičius praėjęs nuo pirmo skiepo r1i1 asmenų grupėje (***)\n# r2i2_mdsv - vidutinis dienų skaičius praėjęs nuo antro skiepo r2i2 asmenų grupėje (***)\n# r1i1_john - vakcinuotųjų \"Janssen\" vakcina procentas r1i1 asmenų grupėje (***)\n# r2i2_john - vakcinuotųjų \"Janssen\" vakcina (kaip pirma doze) procentas r2i2 asmenų grupėje (***)\n#\n# Stulpelių pavadinimo sudarymo logika:\n#   pirma dviejų simbolių pora (pvz \"r1\") - iš kokios būsenos asmenys \"išeina\" aprašomo įvykio metu\n# antra dviejų simbolių pora (pvz \"i2\") - į kokią būseną asmenys \"įeina\" aprašomo įvykio metu\n# pirmas simbolių poros simbolis (raidė):\n#   r - 'at risk'; asmenys, kurie gali užsikrėsti (t.y., tai dar neatsitiko anksčiau)\n# i - 'infected'; asmenys, kurie yra užsikrėtę (pirmas teigiamas diagnostinis testas)\n# c - 'censored'; asmenys, kurie nėra užsikrėtę ir negali užsikrėsti (**)\n# antras simbolių poros simbolis (skaičius):\n#   0 - asmenys, kurie konkrečią dieną dar yra neskiepyti arba yra paskiepyti labai neseniai (<14 d. eigoje) *\n#   1 - asmenys, kuriems konkrečią dieną nuo pirmos skiepo dozės jau yra praėję 14 dienų, arba jie yra paskiepyti antra doze labai neseniai (<14 d. eigoje) *\n#   2 - asmenys, kuriems konkrečią dieną nuo antros skiepo dozės jau yra praėję 14 dienų, arba jie yra paskiepyti trečia doze labai neseniai (<14 d. eigoje) *\n#   3 - asmenys, kuriems konkrečią dieną nuo trečios skiepo dozės jau yra praėję 14 dienų *\n#\n#   Detali lentelės turinio paaiškinimo logika iliustracijoje:\n#   iliustracija\n# Išnašos:\n#   * laikoma, kad vakcinos efektas prasideda 14-ą dieną nuo faktinės skiepijimo datos, tad šioje lentelėje, aprašančioje vakcinų efektyvumą, asmuo faktinę pirmo skiepo dieną (o taip pat ir tryliktą dieną po pirmo skiepo) yra laikomas nevakcinuotu. Toks pat principas taikomas ir antrai bei trečiai skiepo dozėms: jos įsigalioja 14-ą dieną nuo faktinės skiepijimo datos.\n# ** nebestebimi asmenys (be 'follow-up', 'censored'), pvz. dėl emigracijos, prarasto kontakto, mirties ir pan.\n# *** apskaičiuota visoms savivaldybėms, visom lytims, visoms amžiaus grupėms bendrai (dėl konfidencialumo)\n\n# Download functions ----\ndownload_restful <- function (api_call = \"\",\n                              data_filter = function(x) { return(x) }) {\n  if(str_length(api_call) == 0) {\n    message(\"Empty api_call\")\n    return(NULL)\n  }\n  get_data <- GET(api_call)\n\n  get_content <- content(get_data, \"text\")\n\n  get_json <- fromJSON(get_content, flatten = TRUE)\n\n  get_df <- as.data.frame(get_json$features)\n\n  result_offset <- dim(get_df)\n  result_offset <- result_offset[1]\n\n  get_df <- data_filter(get_df)\n\n  page <- 1\n  done_download <- FALSE\n  supp_data <- get_data\n\n  rm(\"get_data\", \"get_content\", \"get_json\")\n\n  while (!done_download && supp_data$status_code == 200) {\n    offset <- result_offset * page\n    page <- page + 1\n    supp_api_call <-\n      paste(api_call, \"&resultOffset=\", sprintf(\"%d\", offset), sep = \"\")\n    supp_data <- GET(supp_api_call)\n    message( \".\", appendLF = FALSE)\n\n    supp_content <- content(supp_data, \"text\")\n    supp_json <- fromJSON(supp_content, flatten = TRUE)\n    supp_df <- as.data.frame(supp_json$features) %>%\n      data_filter()\n    row_count <- dim(supp_json$features)\n    row_count <- row_count[1]\n\n    if (!hasName(supp_json, \"exceededTransferLimit\")) {\n      message(\n        \"\\nDownload complete\"\n      )\n      done_download <- TRUE\n    }\n    if (supp_data$status_code == 200) {\n      get_df <- rbind(get_df, supp_df)\n    } else {\n      message(\"\\nDownload finished with unexpected status code\",\n              supp_data$status_code\n      )\n      break\n    }\n  }\n  return(get_df)\n}\n\n#' Download Excel Documents\n#' Taken from covidregionaldata library\n#'\n#' @param url Character string containing the full URL to the Excel document.\n#' @param archive Character string naming the file name to assign in the\n#' temporary directory.\n#' @param transpose Logical, should the read in data be transposed\n#' @param ... Additional parameters to pass to `read_excel()`.\n#' @inheritParams message_verbose\n#' @importFrom readxl read_excel\n#' @return A `data.frame`.\ndownload_excel <- function(url, archive, verbose = FALSE,\n                           transpose = TRUE, ...) {\n  # download\n  archive <- file.path(tempdir(), archive)\n  download.file(\n    url = url,\n    destfile = archive,\n    mode = \"wb\", quiet = !(verbose)\n  )\n  # read in\n  dt <- suppressMessages(\n    read_excel(archive, ...)\n  )\n\n  if (transpose) {\n    dt <- t(dt)\n  }\n  dt <- as.data.frame(dt)\n  return(dt)\n}\n\n# Download the data ----\n\nlt_vacc_eff_data <- download_restful(\n  api_call = \"https://services3.arcgis.com/MF53hRPmwfLccHCj/arcgis/rest/services/COVID_u%C5%BEsikr%C4%97timai_tarp_vakcinuot%C5%B3_ir_nevakcinuot%C5%B3/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json\" # nolint\n) %>%\n  rename_with(~ gsub(\"attributes.\",\"\", .x)) %>%\n  mutate(date = as_date(as_datetime(date / 1000)))\n\n  \n# Download the at risk data table for the beginning of 2021\n#\n# https://ls-osp-sdg.maps.arcgis.com/sharing/rest/content/items/12822ba507864e119d713d14c1971e78/data\n\n  initial_state <- download_excel(\n    \"https://ls-osp-sdg.maps.arcgis.com/sharing/rest/content/items/12822ba507864e119d713d14c1971e78/data\",\n    sheet = \"initial_states_20210101\",\n    archive = \"initial_states\",\n    transpose = FALSE)\n  \n# Data manipulation ----\n  \nlt_natl_ve_data <- tibble(lt_vacc_eff_data) %>%\n  #select(-object_id) %>%\n  group_by(date, sex, age_gr) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE))) %>%\n  ungroup()\n\nlt_natl_ve_data_adults <- tibble(lt_vacc_eff_data) %>%\n  #select(-object_id) %>%\n  filter(age_gr != \"0-19\") %>%\n  group_by(date, sex, age_gr) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE))) %>%\n  ungroup()\n\nr0_init <- sum(initial_state$at_risk)\nr0_init_adults <- sum(initial_state %>%\n                          filter(age_gr != \"0-19\") %>%\n                        pull(at_risk))\n\ninfection_comparisons_wide <- lt_natl_ve_data %>%\n  group_by(date) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE))) %>%\n  mutate(partially = (r1i1+r1i2) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n         fully = (r2i2+r2i3+r3i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3)) %>%\n  ungroup() %>%\n  # calculate populations in each category\n  mutate(\n    censored = r0c0+r0c1+r1c1+r1c2+r2c2+r2c3+r3c3, # per day\n    infected = r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3, # per day\n    r_pop = r0_init - cumsum(censored + infected),\n    r_pop_r1 = cumsum(r0r1-r1r2-r1i1-r1c1-r1i2-r1c2),\n    r_pop_r2 = cumsum(r1r2-r2r3-r2i2-r2c2-r2i3-r2c3),\n    r_pop_r3 = cumsum(r2r3-r3c3-r3i3),\n    r_pop_r0 = r0_init - r_pop_r1 - r_pop_r2 - r_pop_r3) %>%\n  # fractions of each population infected\n  mutate(\n    i_frac_r0 = (r0i0+r0i1) / r_pop_r0,\n    i_frac_r1 = (r1i1+r1i2) / r_pop_r1,\n    i_frac_r2 = (r2i2+r2i3) / r_pop_r2,\n    i_frac_r3 = (r3i3) / r_pop_r3\n  ) %>%\n  mutate(\n    ve_vs_r0_r1 =  (i_frac_r0 - i_frac_r1)/i_frac_r0,\n    ve_vs_r0_r2 = (i_frac_r0 - i_frac_r2)/i_frac_r0,\n    ve_vs_r0_r3 = if_else(r_pop_r3 != 0,(i_frac_r0 - i_frac_r3)/i_frac_r0, NA_real_)\n  )\n\ninfection_comparisons_wide_adults <- lt_natl_ve_data_adults %>%\n  group_by(date) %>%\n  summarise(across(matches('[icr]\\\\d[icr]\\\\d$'), ~ sum(.x, na.rm=TRUE))) %>%\n  mutate(partially = (r1i1+r1i2) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3),\n         fully = (r2i2+r2i3+r3i3) / (r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3)) %>%\n  ungroup() %>%\n  # calculate populations in each category\n  mutate(\n    censored = r0c0+r0c1+r1c1+r1c2+r2c2+r2c3+r3c3, # per day\n    infected = r0i0+r0i1+r1i1+r1i2+r2i2+r2i3+r3i3, # per day\n    r_pop = r0_init_adults - cumsum(censored + infected),\n    r_pop_r1 = cumsum(r0r1-r1r2-r1i1-r1c1-r1i2-r1c2),\n    r_pop_r2 = cumsum(r1r2-r2r3-r2i2-r2c2-r2i3-r2c3),\n    r_pop_r3 = cumsum(r2r3-r3c3-r3i3),\n    r_pop_r0 = r0_init_adults - r_pop_r1 - r_pop_r2 - r_pop_r3) %>%\n  # fractions of each population infected\n  mutate(\n    i_frac_r0 = (r0i0+r0i1) / r_pop_r0,\n    i_frac_r1 = (r1i1+r1i2) / r_pop_r1,\n    i_frac_r2 = (r2i2+r2i3) / r_pop_r2,\n    i_frac_r3 = (r3i3) / r_pop_r3\n  ) %>%\n  mutate(\n    ve_vs_r0_r1 =  (i_frac_r0 - i_frac_r1)/i_frac_r0,\n    ve_vs_r0_r2 = (i_frac_r0 - i_frac_r2)/i_frac_r0,\n    ve_vs_r0_r3 = if_else(r_pop_r3 != 0,(i_frac_r0 - i_frac_r3)/i_frac_r0, NA_real_)\n  )\n\n# Calculate median vaccination dates ----\n\nmedian_date <- function(data, cols=c(date=\"date\", sums=\"sums\")) {\n  sorted_data <- data %>% select(cols) %>%\n    arrange(cols[\"date\"])\n  medians <- rep_len(NA_Date_, length(data[[cols[\"date\"]]]))\n  last_median_idx <- 1\n  for (i in 1:length(data[[cols[\"date\"]]])) {\n    if (data[[cols[\"sums\"]]][i]>0) {\n      if (last_median_idx == 1) {\n        last_median_idx <- i\n        medians[i] <- data[[cols[\"date\"]]][last_median_idx]\n      } else {\n        if (data[[cols[\"sums\"]]][i] / 2 > data[[cols[\"sums\"]]][last_median_idx] ) {\n          j <- min(last_median_idx+1,i)\n          while (data[[cols[\"sums\"]]][i] / 2 > data[[cols[\"sums\"]]][j]) {\n            j <- j + 1\n          }\n          last_median_idx <- j - 1\n        }\n        medians[i] <- data[[cols[\"date\"]]][last_median_idx]\n      }\n    }\n  }\n  return(as_date(medians))\n}\n\nnarrowed_comps <- infection_comparisons_wide %>%\n  mutate(fully_vxd_14d = r1r2) %>%\n  select(date, fully_vxd_14d) %>%\n  mutate(fully_vxd_14d_tot = cumsum(fully_vxd_14d))\n\nmedian_age_calcs <- infection_comparisons_wide %>%\n  mutate(med_date = median_date(data = narrowed_comps,\n                                cols=c(date=\"date\", sums=\"fully_vxd_14d_tot\"))) %>%\n  mutate(med_vxd_age\n         = if_else(is.na(med_date),\n                   NA_integer_,\n                   # individuals are only counted into r1r2\n                   # once they are 14 days beyond second dose\n                   as.integer(date) - as.integer(med_date)+14L))\n\nmean_age_values <- tibble(lt_vacc_eff_data) %>%\n  select(date, r1i1_mdsv, r2i2_mdsv, r1i1_john, r2i2_john) %>%\n  unique()\n\ninfection_ages <- left_join(infection_comparisons_wide, mean_age_values,\n                            by=c(\"date\")) %>%\n  left_join(median_age_calcs %>%select(date, med_vxd_age), by=c(\"date\")) %>%\n  mutate(delta =\n           ifelse(date < ymd(\"2021-07-01\"),\n                  FALSE,\n                  ifelse( date > ymd(\"2021-08-01\"),\n                          TRUE,\n                          NA)))\n         \ninfection_comparisons <- infection_comparisons_wide %>%\n  pivot_longer(\n    cols = !c(\"date\"),\n    values_to = \"count\",\n    names_to = \"event\")\n\ninfection_comparisons_adults <- infection_comparisons_wide_adults %>%\n  pivot_longer(\n    cols = !c(\"date\"),\n    values_to = \"count\",\n    names_to = \"event\")\n\n\n\nFirst consider the daily number of new cases from each population: those who are unvaccinated or within 14 days of their first vaccination dose; those who are between doses; and those who have had both doses of a two dose vaccination regime.\nSince September the number of “breakthrough” cases in fully-vaccinated individuals has grown significantly and is now close to the figure for unvaccinated individuals.\n\n\nShow code\n\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"r0i0\", \"r0i1\", \"r1i1\", \"r1i2\", \"r2i2\", \"r2i3\", \"r3i3\")) %>%\n  filter(date > ymd(\"2021-01-7\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Individual\\nvaccination\\nstatus\",\n                         breaks = c(\"r0i0\", \"r0i1\", \"r1i1\", \"r1i2\", \"r2i2\", \"r2i3\", \"r3i3\"),\n                         labels = c(\"Unvaccinated or\\nless than 14d\\nafter 1st dose\",\n                                    \"14d after\\n1st dose\",\n                                    \"14+d after\\n1st dose\",\n                                    \"14d after\\n2nd dose\",\n                                    \"14+d after\\n2nd dose\",\n                                    \"14d after\\n3rd dose\",\n                                    \"14+d after\\n3rd dose\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day rolling average\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nLooking at the contribution to the number of cases, these cases in fully-vaccinated individuals have increased fairly steadily since July. The number of cases in partially-vaccinated individuals staying fairly constant reflects that this population is staying fairly stable with steady turnover as people complete their two dose vaccination regime.\n\n\nShow code\n\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"partially\", \"fully\")) %>%\n  #filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status\",\n                         breaks = c(\"partially\", \"fully\"),\n                         labels = c(\"Partially\", \"Fully\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous( labels = scales::percent,\n                      sec.axis = sec_axis(~ ., labels = scales::percent)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day rolling average as fraction of total infections\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nNormalised by the number of people with each vaccination status, incidence peaked for unvaccinated individuals at over 1.5 in late October. The figures for fully- and partially-vaccinated individuals increased slowly since July and peaked a little later. There are some cases among individuals who have had a third booster shot.\n\n\nShow code\n\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\")*1000 ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\"),\n                         labels = c(\"Unvaccinated\",\n                                    \"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day average cases per 1000 population with that status\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nVaccine effectiveness is calculated by considering the relative incidence among each population compared with the unvaccinated population. This has shown fairly steady decline in fully-vaccinated individuals since July and is now below 35%.\nThis fading vaccination across the whole population of fully-vaccinated individuals reflects that these vaccinations are aging. Lithuania started vaccinating individuals in early winter 2021. The median “age” of second dose vaccination is over 150 days (on 20 November).\n\n\nShow code\n\nmed_age_plot <- median_age_calcs %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=med_vxd_age)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  scale_x_date() +\n  scale_y_continuous(\n    sec.axis = sec_axis(~ .,\n                        breaks = seq(from = 0, to = 240, by = 30),),\n    limits = c(0,NA),\n    breaks = seq(from = 0, to = 240, by = 30),\n    oob = scales::oob_censor)  +\n  labs(x=\"Date\", y=\"Median days\\nsince 2nd dose\")\n\ninf_eff_plot <- infection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  filter(pc_cases_7d_mean<1) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\"),\n                         labels = c(\"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(\n    sec.axis = sec_axis(\n      ~ .,\n      breaks = seq(from = 0, to = 1, by = 0.1),\n      labels = label_percent(accuracy=1)),\n    limits = c(0,1),\n    breaks = seq(from = 0, to = 1, by = 0.1),\n    #limits = c(0,15),\n    labels = label_percent(accuracy=1),\n    oob = scales::oob_censor) +\n  labs(\n       y=\"Effectiveness\",\n       y=\"Date\"\n) +\n  scale_x_date()\n\ninf_eff_plot / med_age_plot + plot_layout(heights = c(2,1)) +\n  plot_annotation(\n    title=\"Lithuania - COVID-19 vaccine effectiveness fades beyond 4 months\",\n       subtitle=\"Calculated on 7 day averages, compared with median days since 2nd dose\",\n    caption=\"Richard Martin-Nielsen\\nData: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\n\n\nShow code\n\ninfection_comparisons %>%\n  group_by(event) %>%\n  mutate(pc_cases_14d_mean = zoo::rollmean(count,k=14, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  filter(pc_cases_14d_mean<1) %>%\n  ggplot(aes(x = date, y=pc_cases_14d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\"),\n                         labels = c(\"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(\n    sec.axis = sec_axis(\n      ~ .,\n      breaks = seq(from = 0, to = 1, by = 0.1),\n      labels = scales::percent),\n    limits = c(0,1),\n    breaks = seq(from = 0, to = 1, by = 0.1),\n    #limits = c(0,15),\n    labels = scales::percent,\n    oob = scales::oob_censor) +\n  labs(title=\"Lithuania - COVID-19 vaccine effectiveness by vaccination status\",\n       subtitle=\"14 day mean\",\n       y=\"Vaccine effectiveness\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\nComparing vaccine effectiveness to vaccine age\nOSP provides for each data, the average ages of vaccinations among those who are infected after two doses (r1i1_mdsv and r2i2_mdsv), and I also have a rough calculation of the median age of a double vaccination. (This calculation does not account for removing people who are infected or “censored” from the population, nor for those who have booster shots, so becomes less useful after November when boosters become more common.)\nBoth the charts using the vaccine effectiveness after a single shot show the noisiness of this data - including some values below zero.\nBreaking the data according to a split of Alpha-dominant time period (before 1 July 2021) and Delta-dominant periods (after 1 August 2021), and discarding dates for the month of July shows separate trends for the two periods.\n\n\nShow code\n\ninfection_ages %>%\n  filter(r2i2_mdsv>0, !is.na(delta)) %>%\n  mutate(med_vxd_age = med_vxd_age / 7) %>%\n  ggplot(aes(colour=date,y=ve_vs_r0_r2,x=med_vxd_age,group=delta)) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_color_date(name=\"Date\") +\n  geom_smooth() +\n    labs(\n      title=\"Lithuania - COVID-19 fading vaccine effectiveness\",\n      subtitle = \"Compared with median number of days since second dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Weeks since second dose\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") \n\n\n\nShow code\n\ninfection_ages %>%\n  filter(r1i1_john>0) %>%\n  mutate(r1i1_john = r1i1_john / 100) %>%\n  ggplot(aes(colour=date,y=ve_vs_r0_r1,x=r1i1_john)) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_x_continuous(labels = scales::percent_format()) +\n  scale_color_date(name=\"Date\") +\n  geom_smooth() +\n      labs(\n      title=\"Lithuania - COVID-19 vaccine effectiveness\",\n      subtitle = \"Janssen vaccinations among those infected after one dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Percentage of Janssen vaccinations\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") \n\n\n\nShow code\n\ninfection_ages %>%\n  filter(r2i2_mdsv>0, !is.na(delta)) %>%\n  mutate( r2i2_mdsv = r2i2_mdsv / 7 ) %>%\n  ggplot(aes(colour=date,y=ve_vs_r0_r2,x=r2i2_mdsv, group=delta)) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_color_date(name=\"Date\") +\n  geom_smooth() +\n      labs(\n      title=\"Lithuania - COVID-19 fading vaccine effectiveness\",\n      subtitle = \"Compared with average number of days since second dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Average weeks since second dose\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") \n\n\n\nShow code\n\ninfection_ages %>%\n  filter(r2i2_mdsv>0) %>%\n  mutate( r2i2_mdsv = r2i2_mdsv / 7 ) %>%\n  ggplot(aes(colour=r1i1_john,y=ve_vs_r0_r1,x=r1i1_mdsv)) +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_color_continuous(name=\"Percent Janssen\") +\n  geom_smooth() +\n      labs(\n      title=\"Lithuania - COVID-19 fading vaccine effectiveness\",\n      subtitle = \"Compared with time since first dose\",\n      y=\"Vaccine effectiveness\",\n      x=\"Weeks since first dose\",\n      caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") \n\n\n\n\nCalculations excluding under-20s\nBecause the level rate of vaccination among Lithuanians below the age of 20 is much lower than in the rest of the population, I also present calculations which only consider the population of 20 and above.\nFirst, here is a chart from the OSP showing the vaccination status by age group.\nThe vaccine is not available for children under the age of 11, and though figures for 18 and 19 year-olds are comparable with older adults, the data for vaccination and infection/censoring are only available on 20 year increments.\nFigure from https://osp.stat.gov.lt\n\nShow code\n\ninfection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"partially\", \"fully\")) %>%\n  #filter(date > ymd(\"2020-11-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status\",\n                         breaks = c(\"partially\", \"fully\"),\n                         labels = c(\"Partially\", \"Fully\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous( labels = scales::percent,\n                      sec.axis = sec_axis(~ ., labels = scales::percent)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status - 20+ only\",\n       subtitle=\"7 day rolling average as fraction of total infections\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\n\nShow code\n\ninfection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\")*1000 ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"i_frac_r0\", \"i_frac_r1\", \"i_frac_r2\", \"i_frac_r3\"),\n                         labels = c(\"Unvaccinated\",\n                                    \"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(sec.axis = sec_axis(~ .)) +\n  labs(title=\"Lithuania - COVID-19 cases by vaccination status\",\n       subtitle=\"7 day average cases per 1000 population with that status\",\n       y=\"New cases\",\n       x=\"Date\",\n       caption=\"Richard Martin-Nielsen | Data: Office of Statistics Portal osp.stat.gov.lt\") +\n  scale_x_date()\n\n\n\n\n\n\nShow code\n\ninf_eff_plot_adults <- infection_comparisons_adults %>%\n  group_by(event) %>%\n  mutate(pc_cases_7d_mean = zoo::rollmean(count,k=7, fill=NA, align=\"center\") ) %>%\n  ungroup() %>%\n  filter(event %in% c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\")) %>%\n  filter(date > ymd(\"2021-03-01\")) %>%\n  filter(pc_cases_7d_mean<1) %>%\n  ggplot(aes(x = date, y=pc_cases_7d_mean, colour=event)) +\n  theme_minimal() +\n  geom_line(size=1) +\n  #scale_fill_brewer(palette = \"Set2\") +\n  scale_colour_viridis_d(name = \"Vaccination status (14 days after...)\",\n                         breaks = c(\"ve_vs_r0_r1\", \"ve_vs_r0_r2\", \"ve_vs_r0_r3\"),\n                         labels = c(\"First dose\",\n                                    \"Second dose\",\n                                    \"Booster\")) +\n  theme(legend.position = \"bottom\") +\n  scale_y_continuous(\n    sec.axis = sec_axis(\n      ~ .,\n      breaks = seq(from = 0, to = 1, by = 0.1),\n      labels = label_percent(accuracy=1)),\n    limits = c(0,1),\n    breaks = seq(from = 0, to = 1, by = 0.1),\n    #limits = c(0,15),\n    labels = label_percent(accuracy=1),\n    oob = scales::oob_censor) +\n  labs(\n       y=\"Effectiveness\",\n       y=\"Date\"\n) +\n  scale_x_date()\n\ninf_eff_plot_adults / med_age_plot + plot_layout(heights = c(2,1)) +\n  plot_annotation(\n    title=\"Lithuania - COVID-19 vaccine effectiveness fades beyond 4 months\",\n       subtitle=\"Calculated on 7 day averages, ages 20+, compared with median days since 2nd dose\",\n    caption=\"Richard Martin-Nielsen\\nData: Office of Statistics Portal osp.stat.gov.lt\")\n\n\n\n\n\n\n\n",
      "last_modified": "2021-11-21T21:45:55+02:00"
    },
    {
      "path": "index.html",
      "title": "Lithuanian COVID-19 calculations",
      "description": "Regularly updated graphs and calculations of Lithuanian COVID-19 data\n",
      "author": [],
      "date": "2021-11-19",
      "contents": "\nLithuanian COVID calculations\nThis website uses RMarkdown files to automatically generate graphs which present for Lithuania:\nCase and death incidence for COVID-19 for national age cohorts\nComparative incidence by vaccination status and vaccine effectiveness\n\n\n\n",
      "last_modified": "2021-11-20T09:12:32+02:00"
    }
  ],
  "collections": []
}
