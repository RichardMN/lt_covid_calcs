[["age_breakdowns.html", "COVID-19 in Lithuania: Age cohort graphs Intro Data source Input Data manipulation Graphs R session info References", " COVID-19 in Lithuania: Age cohort graphs Richard Martin-Nielsen Last updated: 28 October, 2021 Intro Data source These charts are drawn using data published by the Official Statistics Portal (OSP) on their COVID-19 open data site, along with the annual population counts for Lithuanian municipalities, also published by the OSP. The R markdown source is available as a github repo. Input Loading libraries: library(dplyr) library(tidyr) library(stringr) library(ggplot2) library(lubridate) library(zoo) library(RColorBrewer) library(httr) library(jsonlite) library(readxl) # Set-up output ---- # Figure path on disk = base.dir + fig.path # Figure URL online = base.url + fig.path knitr::opts_knit$set(base.dir = stringr::str_c(here::here(), &quot;/docs/&quot;), base.url = &quot;/lt_covid_calcs/&quot;) # project root folder knitr::opts_chunk$set( fig.path = stringr::str_c(paste0(paste(&quot;images&quot;, sep = &quot;/&quot;)), &quot;/&quot;), message = FALSE, warning = FALSE ) # Load data ---- aggregate_url &lt;-&quot;https://services3.arcgis.com/MF53hRPmwfLccHCj/arcgis/rest/services/Agreguoti_COVID19_atvejai_ir_mirtys/FeatureServer/0/query?where=1%3D1&amp;outFields=*&amp;outSR=4326&amp;f=json&quot; download_restful &lt;- function (api_call = &quot;&quot;, data_filter = function(x) { return(x) }) { if(str_length(api_call) == 0) { message(&quot;Empty api_call&quot;) return(NULL) } get_data &lt;- GET(api_call) get_content &lt;- content(get_data, &quot;text&quot;) get_json &lt;- fromJSON(get_content, flatten = TRUE) get_df &lt;- as.data.frame(get_json$features) result_offset &lt;- dim(get_df) result_offset &lt;- result_offset[1] get_df &lt;- data_filter(get_df) page &lt;- 1 done_download &lt;- FALSE supp_data &lt;- get_data rm(&quot;get_data&quot;, &quot;get_content&quot;, &quot;get_json&quot;) while (!done_download &amp;&amp; supp_data$status_code == 200) { offset &lt;- result_offset * page page &lt;- page + 1 supp_api_call &lt;- paste(api_call, &quot;&amp;resultOffset=&quot;, sprintf(&quot;%d&quot;, offset), sep = &quot;&quot;) supp_data &lt;- GET(supp_api_call) message( &quot;.&quot;, appendLF = FALSE) supp_content &lt;- content(supp_data, &quot;text&quot;) supp_json &lt;- fromJSON(supp_content, flatten = TRUE) supp_df &lt;- as.data.frame(supp_json$features) %&gt;% data_filter() row_count &lt;- dim(supp_json$features) row_count &lt;- row_count[1] if (!hasName(supp_json, &quot;exceededTransferLimit&quot;)) { message( &quot;\\nDownload complete&quot; ) done_download &lt;- TRUE } if (supp_data$status_code == 200) { get_df &lt;- rbind(get_df, supp_df) } else { message(&quot;\\nDownload finished with unexpected status code&quot;, supp_data$status_code ) break } } return(get_df) } #&#39; Download Excel Documents #&#39; Taken from covidregionaldata library #&#39; #&#39; @param url Character string containing the full URL to the Excel document. #&#39; @param archive Character string naming the file name to assign in the #&#39; temporary directory. #&#39; @param transpose Logical, should the read in data be transposed #&#39; @param ... Additional parameters to pass to `read_excel()`. #&#39; @inheritParams message_verbose #&#39; @importFrom readxl read_excel #&#39; @return A `data.frame`. download_excel &lt;- function(url, archive, verbose = FALSE, transpose = TRUE, ...) { # download archive &lt;- file.path(tempdir(), archive) download.file( url = url, destfile = archive, mode = &quot;wb&quot;, quiet = !(verbose) ) # read in dt &lt;- suppressMessages( read_excel(archive, ...) ) if (transpose) { dt &lt;- t(dt) } dt &lt;- as.data.frame(dt) return(dt) } lt_aggregate &lt;- download_restful( api_call = aggregate_url, data_filter = function(x){ transmute(x, municipality_name = attributes.municipality_name, date = attributes.date, sex = attributes.sex, age_gr = attributes.age_gr, new_cases = attributes.new_cases, deaths_all = attributes.deaths_all, deaths_cov1 = attributes.deaths_cov1, deaths_cov2 = attributes.deaths_cov2, deaths_cov3 = attributes.deaths_cov3 )}) lt_age_sex_data &lt;- download_excel( &quot;https://osp.stat.gov.lt/documents/10180/8416503/Resident_population_sex_and_age_2021.xls&quot;, archive = &quot;population_data&quot;, transpose = FALSE, sheet = &quot;Total&quot;, col_types = c(&quot;text&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;, &quot;numeric&quot;), skip = 7) %&gt;% rename(location = &quot;...1&quot;, total = &quot;...2&quot;) Data manipulation age_bands_municipalities &lt;- tibble(lt_aggregate) %&gt;% # select(-object_id) %&gt;% mutate(date = as_date(date)) %&gt;% group_by(municipality_name, date, age_gr) %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE))) %&gt;% ungroup() age_bands &lt;- age_bands_municipalities %&gt;% group_by(date, age_gr) %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE))) natl_age_data &lt;- lt_age_sex_data %&gt;% filter( location == &quot;Total&quot; ) %&gt;% select(-location) %&gt;% pivot_longer( cols = !&quot;total&quot;, values_to = &quot;count&quot;, names_to = &quot;age_range&quot;) %&gt;% mutate_if(is.character, str_remove_all, pattern = &quot;\\\\d+[^\\\\d]&quot;) %&gt;% mutate(age_range = as.numeric(age_range)) %&gt;% mutate(age_range = replace_na(age_range, 85)) %&gt;% mutate(cohort = cut(age_range, c(0, 9, 19, 29, 39, 49, 59, 69, 79, 89 ), c(&quot;0-9&quot;, &quot;10-19&quot;, &quot;20-29&quot;, &quot;30-39&quot;, &quot;40-49&quot;, &quot;50-59&quot;, &quot;60-69&quot;, &quot;70-79&quot;, &quot;80+&quot;), include.lowest = TRUE)) %&gt;% select(-age_range,-total) %&gt;% group_by(cohort) %&gt;% summarise(count = sum(count)) lt_age_data &lt;- lt_age_sex_data %&gt;% filter(grepl(&quot;mun.$&quot;, location)) %&gt;% pivot_longer( cols = !c(&quot;location&quot;,&quot;total&quot;), values_to = &quot;count&quot;, names_to = &quot;age range&quot;) %&gt;% mutate_if(is.character, str_replace_all, pattern = &quot; mun.&quot;, replacement = &quot;&quot;) age_band_factors &lt;- age_bands %&gt;% mutate(cohort = case_when( age_gr == &quot;80-89&quot; ~ &quot;80+&quot;, age_gr == &quot;90-99&quot; ~ &quot;80+&quot;, age_gr == &quot;Centenarianai&quot; ~ &quot;80+&quot;, age_gr == &quot;Nenustatyta&quot; ~ NA_character_, TRUE ~ age_gr )) %&gt;% filter(!is.na(cohort)) %&gt;% select(-age_gr) %&gt;% group_by(date, cohort) %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm=TRUE))) %&gt;% ungroup() per_capita_rates &lt;- left_join(age_band_factors, natl_age_data, by = c(&quot;cohort&quot;)) %&gt;% mutate(population = count, cases_per_100k = new_cases / count * 100000, deaths_all_per_mill = deaths_all / count * 1000000) %&gt;% select(-count) Graphs These charts are inspired by the narrow age cohort graph given by the OSP on their pandemic illustrations page: !()[https://osp.stat.gov.lt/documents/10180/8555211/vaiku_atvejai_per14d_100k_20211023.png] Because the age cohorts given in the two sources used do not align, when calculating COVID rates relative to age cohorts, a smaller number of larger cohorts is used. It is also possible to extend the graph further back into 2021. R session info xfun::session_info() R version 4.1.1 (2021-08-10) Platform: x86_64-apple-darwin17.0 (64-bit) Running under: macOS Big Sur 10.16 Locale: en_CA.UTF-8 / en_CA.UTF-8 / en_CA.UTF-8 / C / en_CA.UTF-8 / en_CA.UTF-8 Package version: askpass_1.1 assertthat_0.2.1 base64enc_0.1.3 bookdown_0.24 bslib_0.3.1 cellranger_1.1.0 cli_3.0.1 colorspace_2.0-2 compiler_4.1.1 cpp11_0.4.0 crayon_1.4.1 curl_4.3.2 DBI_1.1.1 digest_0.6.28 dplyr_1.0.7 ellipsis_0.3.2 evaluate_0.14 fansi_0.5.0 farver_2.1.0 fastmap_1.1.0 fs_1.5.0 generics_0.1.0 ggplot2_3.3.5 glue_1.4.2 graphics_4.1.1 grDevices_4.1.1 grid_4.1.1 gtable_0.3.0 here_1.0.1 highr_0.9 hms_1.1.1 htmltools_0.5.2 httr_1.4.2 isoband_0.2.5 jquerylib_0.1.4 jsonlite_1.7.2 knitr_1.36 labeling_0.4.2 lattice_0.20-45 lifecycle_1.0.1 lubridate_1.8.0 magrittr_2.0.1 MASS_7.3.54 Matrix_1.3.4 methods_4.1.1 mgcv_1.8.38 mime_0.12 munsell_0.5.0 nlme_3.1.153 openssl_1.4.5 pillar_1.6.4 pkgconfig_2.0.3 prettyunits_1.1.1 progress_1.2.2 purrr_0.3.4 R6_2.5.1 rappdirs_0.3.3 RColorBrewer_1.1-2 Rcpp_1.0.7 readxl_1.3.1 rematch_1.0.1 rlang_0.4.12 rmarkdown_2.11 rprojroot_2.0.2 sass_0.4.0 scales_1.1.1 splines_4.1.1 stats_4.1.1 stringi_1.7.5 stringr_1.4.0 sys_3.4 tibble_3.1.5 tidyr_1.1.4 tidyselect_1.1.1 tinytex_0.34 tools_4.1.1 utf8_1.2.2 utils_4.1.1 vctrs_0.3.8 viridisLite_0.4.0 withr_2.4.2 xfun_0.27 yaml_2.2.1 zoo_1.8-9 References "]]
